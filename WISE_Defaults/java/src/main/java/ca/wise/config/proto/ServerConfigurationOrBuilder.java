// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wise_config.proto

package ca.wise.config.proto;

public interface ServerConfigurationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:wise.confic.ServerConfiguration)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *Log output from W.I.S.E. to a file
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.LogFile log = 1;</code>
   * @return Whether the log field is set.
   */
  boolean hasLog();
  /**
   * <pre>
   *Log output from W.I.S.E. to a file
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.LogFile log = 1;</code>
   * @return The log.
   */
  ca.wise.config.proto.ServerConfiguration.LogFile getLog();
  /**
   * <pre>
   *Log output from W.I.S.E. to a file
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.LogFile log = 1;</code>
   */
  ca.wise.config.proto.ServerConfiguration.LogFileOrBuilder getLogOrBuilder();

  /**
   * <pre>
   *Files to signal job start and finish
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.Signals signals = 2;</code>
   * @return Whether the signals field is set.
   */
  boolean hasSignals();
  /**
   * <pre>
   *Files to signal job start and finish
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.Signals signals = 2;</code>
   * @return The signals.
   */
  ca.wise.config.proto.ServerConfiguration.Signals getSignals();
  /**
   * <pre>
   *Files to signal job start and finish
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.Signals signals = 2;</code>
   */
  ca.wise.config.proto.ServerConfiguration.SignalsOrBuilder getSignalsOrBuilder();

  /**
   * <pre>
   *Hardware execution limits
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.Hardware hardware = 3;</code>
   * @return Whether the hardware field is set.
   */
  boolean hasHardware();
  /**
   * <pre>
   *Hardware execution limits
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.Hardware hardware = 3;</code>
   * @return The hardware.
   */
  ca.wise.config.proto.ServerConfiguration.Hardware getHardware();
  /**
   * <pre>
   *Hardware execution limits
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.Hardware hardware = 3;</code>
   */
  ca.wise.config.proto.ServerConfiguration.HardwareOrBuilder getHardwareOrBuilder();

  /**
   * <pre>
   *Communication between Builder and Manager will take place over a dedicated socket
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.SocketConnection socket = 4;</code>
   * @return Whether the socket field is set.
   */
  boolean hasSocket();
  /**
   * <pre>
   *Communication between Builder and Manager will take place over a dedicated socket
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.SocketConnection socket = 4;</code>
   * @return The socket.
   */
  ca.wise.config.proto.ServerConfiguration.SocketConnection getSocket();
  /**
   * <pre>
   *Communication between Builder and Manager will take place over a dedicated socket
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.SocketConnection socket = 4;</code>
   */
  ca.wise.config.proto.ServerConfiguration.SocketConnectionOrBuilder getSocketOrBuilder();

  /**
   * <pre>
   *Communication between all applications will take place over MQTT
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.MqttConnection mqtt = 5;</code>
   * @return Whether the mqtt field is set.
   */
  boolean hasMqtt();
  /**
   * <pre>
   *Communication between all applications will take place over MQTT
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.MqttConnection mqtt = 5;</code>
   * @return The mqtt.
   */
  ca.wise.config.proto.ServerConfiguration.MqttConnection getMqtt();
  /**
   * <pre>
   *Communication between all applications will take place over MQTT
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.MqttConnection mqtt = 5;</code>
   */
  ca.wise.config.proto.ServerConfiguration.MqttConnectionOrBuilder getMqttOrBuilder();

  /**
   * <pre>
   *Settings the API will use to connect to Builder
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.BuilderConnection builder = 6;</code>
   * @return Whether the builder field is set.
   */
  boolean hasBuilder();
  /**
   * <pre>
   *Settings the API will use to connect to Builder
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.BuilderConnection builder = 6;</code>
   * @return The builder.
   */
  ca.wise.config.proto.ServerConfiguration.BuilderConnection getBuilder();
  /**
   * <pre>
   *Settings the API will use to connect to Builder
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.BuilderConnection builder = 6;</code>
   */
  ca.wise.config.proto.ServerConfiguration.BuilderConnectionOrBuilder getBuilderOrBuilder();

  /**
   * <pre>
   *The directory where sample data is stored for testing purposes
   * </pre>
   *
   * <code>string exampleDirectory = 7;</code>
   * @return The exampleDirectory.
   */
  java.lang.String getExampleDirectory();
  /**
   * <pre>
   *The directory where sample data is stored for testing purposes
   * </pre>
   *
   * <code>string exampleDirectory = 7;</code>
   * @return The bytes for exampleDirectory.
   */
  com.google.protobuf.ByteString
      getExampleDirectoryBytes();

  /**
   * <pre>
   *Settings that are only used by W.I.S.E. Manager
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.ManagerSettings manager_settings = 8;</code>
   * @return Whether the managerSettings field is set.
   */
  boolean hasManagerSettings();
  /**
   * <pre>
   *Settings that are only used by W.I.S.E. Manager
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.ManagerSettings manager_settings = 8;</code>
   * @return The managerSettings.
   */
  ca.wise.config.proto.ServerConfiguration.ManagerSettings getManagerSettings();
  /**
   * <pre>
   *Settings that are only used by W.I.S.E. Manager
   * </pre>
   *
   * <code>.wise.confic.ServerConfiguration.ManagerSettings manager_settings = 8;</code>
   */
  ca.wise.config.proto.ServerConfiguration.ManagerSettingsOrBuilder getManagerSettingsOrBuilder();

  /**
   * <pre>
   *Are the W.I.S.E. Manager settings already setup for v2
   * </pre>
   *
   * <code>.google.protobuf.BoolValue already_v2 = 9;</code>
   * @return Whether the alreadyV2 field is set.
   */
  boolean hasAlreadyV2();
  /**
   * <pre>
   *Are the W.I.S.E. Manager settings already setup for v2
   * </pre>
   *
   * <code>.google.protobuf.BoolValue already_v2 = 9;</code>
   * @return The alreadyV2.
   */
  com.google.protobuf.BoolValue getAlreadyV2();
  /**
   * <pre>
   *Are the W.I.S.E. Manager settings already setup for v2
   * </pre>
   *
   * <code>.google.protobuf.BoolValue already_v2 = 9;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getAlreadyV2OrBuilder();

  public ca.wise.config.proto.ServerConfiguration.CommsTypeCase getCommsTypeCase();
}
