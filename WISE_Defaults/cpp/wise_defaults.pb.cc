// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wise_defaults.proto

#include "wise_defaults.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_wise_5fdefaults_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_FbpOptions_wise_5fdefaults_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_wise_5fdefaults_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_FgmOptions_wise_5fdefaults_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_wise_5fdefaults_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_FmcOptions_wise_5fdefaults_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_wise_5fdefaults_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_FwiOptions_wise_5fdefaults_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_wise_5fdefaults_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_SummaryFileDefaults_wise_5fdefaults_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_wise_5fdefaults_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_VectorFileMetadata_wise_5fdefaults_2eproto;
namespace wise {
namespace defaults {
class JobDefaults_FgmOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobDefaults_FgmOptions> _instance;
} _JobDefaults_FgmOptions_default_instance_;
class JobDefaults_FbpOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobDefaults_FbpOptions> _instance;
} _JobDefaults_FbpOptions_default_instance_;
class JobDefaults_FmcOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobDefaults_FmcOptions> _instance;
} _JobDefaults_FmcOptions_default_instance_;
class JobDefaults_FwiOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobDefaults_FwiOptions> _instance;
} _JobDefaults_FwiOptions_default_instance_;
class JobDefaults_SummaryFileDefaultsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobDefaults_SummaryFileDefaults> _instance;
} _JobDefaults_SummaryFileDefaults_default_instance_;
class JobDefaults_VectorFileMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobDefaults_VectorFileMetadata> _instance;
} _JobDefaults_VectorFileMetadata_default_instance_;
class JobDefaultsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobDefaults> _instance;
} _JobDefaults_default_instance_;
}  // namespace defaults
}  // namespace wise
static void InitDefaultsscc_info_JobDefaults_wise_5fdefaults_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wise::defaults::_JobDefaults_default_instance_;
    new (ptr) ::wise::defaults::JobDefaults();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wise::defaults::JobDefaults::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_JobDefaults_wise_5fdefaults_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_JobDefaults_wise_5fdefaults_2eproto}, {
      &scc_info_JobDefaults_FgmOptions_wise_5fdefaults_2eproto.base,
      &scc_info_JobDefaults_FbpOptions_wise_5fdefaults_2eproto.base,
      &scc_info_JobDefaults_FmcOptions_wise_5fdefaults_2eproto.base,
      &scc_info_JobDefaults_FwiOptions_wise_5fdefaults_2eproto.base,
      &scc_info_JobDefaults_SummaryFileDefaults_wise_5fdefaults_2eproto.base,
      &scc_info_JobDefaults_VectorFileMetadata_wise_5fdefaults_2eproto.base,}};

static void InitDefaultsscc_info_JobDefaults_FbpOptions_wise_5fdefaults_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wise::defaults::_JobDefaults_FbpOptions_default_instance_;
    new (ptr) ::wise::defaults::JobDefaults_FbpOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wise::defaults::JobDefaults_FbpOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_FbpOptions_wise_5fdefaults_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobDefaults_FbpOptions_wise_5fdefaults_2eproto}, {}};

static void InitDefaultsscc_info_JobDefaults_FgmOptions_wise_5fdefaults_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wise::defaults::_JobDefaults_FgmOptions_default_instance_;
    new (ptr) ::wise::defaults::JobDefaults_FgmOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wise::defaults::JobDefaults_FgmOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_FgmOptions_wise_5fdefaults_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobDefaults_FgmOptions_wise_5fdefaults_2eproto}, {}};

static void InitDefaultsscc_info_JobDefaults_FmcOptions_wise_5fdefaults_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wise::defaults::_JobDefaults_FmcOptions_default_instance_;
    new (ptr) ::wise::defaults::JobDefaults_FmcOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wise::defaults::JobDefaults_FmcOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_FmcOptions_wise_5fdefaults_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobDefaults_FmcOptions_wise_5fdefaults_2eproto}, {}};

static void InitDefaultsscc_info_JobDefaults_FwiOptions_wise_5fdefaults_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wise::defaults::_JobDefaults_FwiOptions_default_instance_;
    new (ptr) ::wise::defaults::JobDefaults_FwiOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wise::defaults::JobDefaults_FwiOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_FwiOptions_wise_5fdefaults_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobDefaults_FwiOptions_wise_5fdefaults_2eproto}, {}};

static void InitDefaultsscc_info_JobDefaults_SummaryFileDefaults_wise_5fdefaults_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wise::defaults::_JobDefaults_SummaryFileDefaults_default_instance_;
    new (ptr) ::wise::defaults::JobDefaults_SummaryFileDefaults();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wise::defaults::JobDefaults_SummaryFileDefaults::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_SummaryFileDefaults_wise_5fdefaults_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobDefaults_SummaryFileDefaults_wise_5fdefaults_2eproto}, {}};

static void InitDefaultsscc_info_JobDefaults_VectorFileMetadata_wise_5fdefaults_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wise::defaults::_JobDefaults_VectorFileMetadata_default_instance_;
    new (ptr) ::wise::defaults::JobDefaults_VectorFileMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wise::defaults::JobDefaults_VectorFileMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobDefaults_VectorFileMetadata_wise_5fdefaults_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobDefaults_VectorFileMetadata_wise_5fdefaults_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_wise_5fdefaults_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_wise_5fdefaults_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_wise_5fdefaults_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_wise_5fdefaults_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, maxaccts_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, distanceresolution_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, perimeterresolution_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, minimumspreadingros_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, stopatgridend_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, breaching_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, dynamicspatialthreshold_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, spotting_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, purgenondisplayable_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, dx_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, dy_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, dt_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, growthpercentileapplied_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FgmOptions, growthpercentile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FbpOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FbpOptions, windeffect_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FbpOptions, greenup_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FbpOptions, terraineffect_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FmcOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FmcOptions, nodataelev_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FmcOptions, percentoverride_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FmcOptions, terrain_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FwiOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FwiOptions, fwispatialinterpolation_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FwiOptions, fwifromspatialweather_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FwiOptions, historyoneffectedfwi_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FwiOptions, burningconditionson_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_FwiOptions, fwitemporalinterpolation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_SummaryFileDefaults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_SummaryFileDefaults, inputsummary_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_SummaryFileDefaults, elevationinfo_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_SummaryFileDefaults, location_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_SummaryFileDefaults, gridinfo_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_SummaryFileDefaults, timetoexecute_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, perimeterunit_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, areaunits_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, activeperimeter_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, totalperimeter_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, firesize_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, simulationdate_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, ignitionname_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, jobname_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, scenarioname_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults_VectorFileMetadata, wiseversion_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults, fgmoptions_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults, fbpoptions_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults, fmcoptions_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults, fwioptions_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults, summaryfiledefaults_),
  PROTOBUF_FIELD_OFFSET(::wise::defaults::JobDefaults, vectorfilemetadata_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::wise::defaults::JobDefaults_FgmOptions)},
  { 19, -1, sizeof(::wise::defaults::JobDefaults_FbpOptions)},
  { 27, -1, sizeof(::wise::defaults::JobDefaults_FmcOptions)},
  { 35, -1, sizeof(::wise::defaults::JobDefaults_FwiOptions)},
  { 45, -1, sizeof(::wise::defaults::JobDefaults_SummaryFileDefaults)},
  { 55, -1, sizeof(::wise::defaults::JobDefaults_VectorFileMetadata)},
  { 70, -1, sizeof(::wise::defaults::JobDefaults)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wise::defaults::_JobDefaults_FgmOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wise::defaults::_JobDefaults_FbpOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wise::defaults::_JobDefaults_FmcOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wise::defaults::_JobDefaults_FwiOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wise::defaults::_JobDefaults_SummaryFileDefaults_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wise::defaults::_JobDefaults_VectorFileMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wise::defaults::_JobDefaults_default_instance_),
};

const char descriptor_table_protodef_wise_5fdefaults_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023wise_defaults.proto\022\rwise.defaults\"\344\r\n"
  "\013JobDefaults\0229\n\nfgmOptions\030\001 \001(\0132%.wise."
  "defaults.JobDefaults.FgmOptions\0229\n\nfbpOp"
  "tions\030\002 \001(\0132%.wise.defaults.JobDefaults."
  "FbpOptions\0229\n\nfmcOptions\030\003 \001(\0132%.wise.de"
  "faults.JobDefaults.FmcOptions\0229\n\nfwiOpti"
  "ons\030\004 \001(\0132%.wise.defaults.JobDefaults.Fw"
  "iOptions\022K\n\023summaryFileDefaults\030\005 \001(\0132.."
  "wise.defaults.JobDefaults.SummaryFileDef"
  "aults\022I\n\022vectorFileMetadata\030\006 \001(\0132-.wise"
  ".defaults.JobDefaults.VectorFileMetadata"
  "\032\315\002\n\nFgmOptions\022\020\n\010maxAccTs\030\001 \001(\t\022\032\n\022dis"
  "tanceResolution\030\002 \001(\001\022\033\n\023perimeterResolu"
  "tion\030\003 \001(\001\022\033\n\023minimumSpreadingRos\030\004 \001(\001\022"
  "\025\n\rstopAtGridEnd\030\005 \001(\010\022\021\n\tbreaching\030\006 \001("
  "\010\022\037\n\027dynamicSpatialThreshold\030\007 \001(\010\022\020\n\010sp"
  "otting\030\010 \001(\010\022\033\n\023purgeNonDisplayable\030\t \001("
  "\010\022\n\n\002dx\030\n \001(\001\022\n\n\002dy\030\013 \001(\001\022\n\n\002dt\030\014 \001(\t\022\037\n"
  "\027growthPercentileApplied\030\r \001(\010\022\030\n\020growth"
  "Percentile\030\016 \001(\001\032H\n\nFbpOptions\022\022\n\nwindEf"
  "fect\030\001 \001(\010\022\017\n\007greenUp\030\002 \001(\010\022\025\n\rterrainEf"
  "fect\030\003 \001(\010\032J\n\nFmcOptions\022\022\n\nnoDataElev\030\001"
  " \001(\001\022\027\n\017percentOverride\030\002 \001(\001\022\017\n\007terrain"
  "\030\003 \001(\010\032\251\001\n\nFwiOptions\022\037\n\027fwiSpatialInter"
  "polation\030\001 \001(\010\022\035\n\025fwiFromSpatialWeather\030"
  "\002 \001(\010\022\034\n\024historyOnEffectedFwi\030\003 \001(\010\022\033\n\023b"
  "urningConditionsOn\030\004 \001(\010\022 \n\030fwiTemporalI"
  "nterpolation\030\005 \001(\010\032}\n\023SummaryFileDefault"
  "s\022\024\n\014inputSummary\030\001 \001(\010\022\025\n\relevationInfo"
  "\030\002 \001(\010\022\020\n\010location\030\003 \001(\010\022\020\n\010gridInfo\030\004 \001"
  "(\010\022\025\n\rtimeToExecute\030\005 \001(\010\032\277\004\n\022VectorFile"
  "Metadata\022R\n\rperimeterUnit\030\001 \001(\0162;.wise.d"
  "efaults.JobDefaults.VectorFileMetadata.P"
  "erimeterUnit\022J\n\tareaUnits\030\002 \001(\01627.wise.d"
  "efaults.JobDefaults.VectorFileMetadata.A"
  "reaUnits\022\027\n\017activePerimeter\030\003 \001(\010\022\026\n\016tot"
  "alPerimeter\030\004 \001(\010\022\020\n\010fireSize\030\005 \001(\010\022\026\n\016s"
  "imulationDate\030\006 \001(\010\022\024\n\014ignitionName\030\007 \001("
  "\010\022\017\n\007jobName\030\010 \001(\010\022\024\n\014scenarioName\030\t \001(\010"
  "\022\023\n\013wiseVersion\030\n \001(\010\"V\n\rPerimeterUnit\022\t"
  "\n\005MILES\020\000\022\016\n\nKILOMETRES\020\001\022\n\n\006METRES\020\002\022\010\n"
  "\004FEET\020\003\022\t\n\005YARDS\020\004\022\t\n\005CHAIN\020\005\"\203\001\n\tAreaUn"
  "its\022\t\n\005ACRES\020\000\022\025\n\021KILOMETRES_SQUARE\020\001\022\021\n"
  "\rMETRES_SQUARE\020\002\022\014\n\010HECTARES\020\003\022\020\n\014MILES_"
  "SQUARE\020\004\022\017\n\013FEET_SQUARE\020\005\022\020\n\014YARDS_SQUAR"
  "E\020\006B/\n\026ca.wise.defaults.protoP\001\252\002\022WISE_A"
  "PI.NET.Protob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_wise_5fdefaults_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_wise_5fdefaults_2eproto_sccs[7] = {
  &scc_info_JobDefaults_wise_5fdefaults_2eproto.base,
  &scc_info_JobDefaults_FbpOptions_wise_5fdefaults_2eproto.base,
  &scc_info_JobDefaults_FgmOptions_wise_5fdefaults_2eproto.base,
  &scc_info_JobDefaults_FmcOptions_wise_5fdefaults_2eproto.base,
  &scc_info_JobDefaults_FwiOptions_wise_5fdefaults_2eproto.base,
  &scc_info_JobDefaults_SummaryFileDefaults_wise_5fdefaults_2eproto.base,
  &scc_info_JobDefaults_VectorFileMetadata_wise_5fdefaults_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_wise_5fdefaults_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_wise_5fdefaults_2eproto = {
  false, false, descriptor_table_protodef_wise_5fdefaults_2eproto, "wise_defaults.proto", 1860,
  &descriptor_table_wise_5fdefaults_2eproto_once, descriptor_table_wise_5fdefaults_2eproto_sccs, descriptor_table_wise_5fdefaults_2eproto_deps, 7, 0,
  schemas, file_default_instances, TableStruct_wise_5fdefaults_2eproto::offsets,
  file_level_metadata_wise_5fdefaults_2eproto, 7, file_level_enum_descriptors_wise_5fdefaults_2eproto, file_level_service_descriptors_wise_5fdefaults_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_wise_5fdefaults_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_wise_5fdefaults_2eproto)), true);
namespace wise {
namespace defaults {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* JobDefaults_VectorFileMetadata_PerimeterUnit_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_wise_5fdefaults_2eproto);
  return file_level_enum_descriptors_wise_5fdefaults_2eproto[0];
}
bool JobDefaults_VectorFileMetadata_PerimeterUnit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr JobDefaults_VectorFileMetadata_PerimeterUnit JobDefaults_VectorFileMetadata::MILES;
constexpr JobDefaults_VectorFileMetadata_PerimeterUnit JobDefaults_VectorFileMetadata::KILOMETRES;
constexpr JobDefaults_VectorFileMetadata_PerimeterUnit JobDefaults_VectorFileMetadata::METRES;
constexpr JobDefaults_VectorFileMetadata_PerimeterUnit JobDefaults_VectorFileMetadata::FEET;
constexpr JobDefaults_VectorFileMetadata_PerimeterUnit JobDefaults_VectorFileMetadata::YARDS;
constexpr JobDefaults_VectorFileMetadata_PerimeterUnit JobDefaults_VectorFileMetadata::CHAIN;
constexpr JobDefaults_VectorFileMetadata_PerimeterUnit JobDefaults_VectorFileMetadata::PerimeterUnit_MIN;
constexpr JobDefaults_VectorFileMetadata_PerimeterUnit JobDefaults_VectorFileMetadata::PerimeterUnit_MAX;
constexpr int JobDefaults_VectorFileMetadata::PerimeterUnit_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* JobDefaults_VectorFileMetadata_AreaUnits_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_wise_5fdefaults_2eproto);
  return file_level_enum_descriptors_wise_5fdefaults_2eproto[1];
}
bool JobDefaults_VectorFileMetadata_AreaUnits_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr JobDefaults_VectorFileMetadata_AreaUnits JobDefaults_VectorFileMetadata::ACRES;
constexpr JobDefaults_VectorFileMetadata_AreaUnits JobDefaults_VectorFileMetadata::KILOMETRES_SQUARE;
constexpr JobDefaults_VectorFileMetadata_AreaUnits JobDefaults_VectorFileMetadata::METRES_SQUARE;
constexpr JobDefaults_VectorFileMetadata_AreaUnits JobDefaults_VectorFileMetadata::HECTARES;
constexpr JobDefaults_VectorFileMetadata_AreaUnits JobDefaults_VectorFileMetadata::MILES_SQUARE;
constexpr JobDefaults_VectorFileMetadata_AreaUnits JobDefaults_VectorFileMetadata::FEET_SQUARE;
constexpr JobDefaults_VectorFileMetadata_AreaUnits JobDefaults_VectorFileMetadata::YARDS_SQUARE;
constexpr JobDefaults_VectorFileMetadata_AreaUnits JobDefaults_VectorFileMetadata::AreaUnits_MIN;
constexpr JobDefaults_VectorFileMetadata_AreaUnits JobDefaults_VectorFileMetadata::AreaUnits_MAX;
constexpr int JobDefaults_VectorFileMetadata::AreaUnits_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void JobDefaults_FgmOptions::InitAsDefaultInstance() {
}
class JobDefaults_FgmOptions::_Internal {
 public:
};

JobDefaults_FgmOptions::JobDefaults_FgmOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:wise.defaults.JobDefaults.FgmOptions)
}
JobDefaults_FgmOptions::JobDefaults_FgmOptions(const JobDefaults_FgmOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  maxaccts_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_maxaccts().empty()) {
    maxaccts_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_maxaccts(),
      GetArena());
  }
  dt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dt().empty()) {
    dt_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dt(),
      GetArena());
  }
  ::memcpy(&distanceresolution_, &from.distanceresolution_,
    static_cast<size_t>(reinterpret_cast<char*>(&growthpercentile_) -
    reinterpret_cast<char*>(&distanceresolution_)) + sizeof(growthpercentile_));
  // @@protoc_insertion_point(copy_constructor:wise.defaults.JobDefaults.FgmOptions)
}

void JobDefaults_FgmOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JobDefaults_FgmOptions_wise_5fdefaults_2eproto.base);
  maxaccts_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&distanceresolution_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&growthpercentile_) -
      reinterpret_cast<char*>(&distanceresolution_)) + sizeof(growthpercentile_));
}

JobDefaults_FgmOptions::~JobDefaults_FgmOptions() {
  // @@protoc_insertion_point(destructor:wise.defaults.JobDefaults.FgmOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobDefaults_FgmOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  maxaccts_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JobDefaults_FgmOptions::ArenaDtor(void* object) {
  JobDefaults_FgmOptions* _this = reinterpret_cast< JobDefaults_FgmOptions* >(object);
  (void)_this;
}
void JobDefaults_FgmOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobDefaults_FgmOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobDefaults_FgmOptions& JobDefaults_FgmOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobDefaults_FgmOptions_wise_5fdefaults_2eproto.base);
  return *internal_default_instance();
}


void JobDefaults_FgmOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:wise.defaults.JobDefaults.FgmOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maxaccts_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dt_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&distanceresolution_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&growthpercentile_) -
      reinterpret_cast<char*>(&distanceresolution_)) + sizeof(growthpercentile_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobDefaults_FgmOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string maxAccTs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_maxaccts();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "wise.defaults.JobDefaults.FgmOptions.maxAccTs"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double distanceResolution = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          distanceresolution_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double perimeterResolution = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          perimeterresolution_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double minimumSpreadingRos = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          minimumspreadingros_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bool stopAtGridEnd = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          stopatgridend_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool breaching = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          breaching_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool dynamicSpatialThreshold = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          dynamicspatialthreshold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool spotting = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          spotting_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool purgeNonDisplayable = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          purgenondisplayable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double dx = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          dx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double dy = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 89)) {
          dy_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string dt = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_dt();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "wise.defaults.JobDefaults.FgmOptions.dt"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool growthPercentileApplied = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          growthpercentileapplied_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double growthPercentile = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 113)) {
          growthpercentile_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobDefaults_FgmOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wise.defaults.JobDefaults.FgmOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string maxAccTs = 1;
  if (this->maxaccts().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_maxaccts().data(), static_cast<int>(this->_internal_maxaccts().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wise.defaults.JobDefaults.FgmOptions.maxAccTs");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_maxaccts(), target);
  }

  // double distanceResolution = 2;
  if (!(this->distanceresolution() <= 0 && this->distanceresolution() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_distanceresolution(), target);
  }

  // double perimeterResolution = 3;
  if (!(this->perimeterresolution() <= 0 && this->perimeterresolution() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_perimeterresolution(), target);
  }

  // double minimumSpreadingRos = 4;
  if (!(this->minimumspreadingros() <= 0 && this->minimumspreadingros() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_minimumspreadingros(), target);
  }

  // bool stopAtGridEnd = 5;
  if (this->stopatgridend() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_stopatgridend(), target);
  }

  // bool breaching = 6;
  if (this->breaching() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_breaching(), target);
  }

  // bool dynamicSpatialThreshold = 7;
  if (this->dynamicspatialthreshold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_dynamicspatialthreshold(), target);
  }

  // bool spotting = 8;
  if (this->spotting() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_spotting(), target);
  }

  // bool purgeNonDisplayable = 9;
  if (this->purgenondisplayable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_purgenondisplayable(), target);
  }

  // double dx = 10;
  if (!(this->dx() <= 0 && this->dx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_dx(), target);
  }

  // double dy = 11;
  if (!(this->dy() <= 0 && this->dy() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_dy(), target);
  }

  // string dt = 12;
  if (this->dt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dt().data(), static_cast<int>(this->_internal_dt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wise.defaults.JobDefaults.FgmOptions.dt");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_dt(), target);
  }

  // bool growthPercentileApplied = 13;
  if (this->growthpercentileapplied() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->_internal_growthpercentileapplied(), target);
  }

  // double growthPercentile = 14;
  if (!(this->growthpercentile() <= 0 && this->growthpercentile() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(14, this->_internal_growthpercentile(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wise.defaults.JobDefaults.FgmOptions)
  return target;
}

size_t JobDefaults_FgmOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wise.defaults.JobDefaults.FgmOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string maxAccTs = 1;
  if (this->maxaccts().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_maxaccts());
  }

  // string dt = 12;
  if (this->dt().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dt());
  }

  // double distanceResolution = 2;
  if (!(this->distanceresolution() <= 0 && this->distanceresolution() >= 0)) {
    total_size += 1 + 8;
  }

  // double perimeterResolution = 3;
  if (!(this->perimeterresolution() <= 0 && this->perimeterresolution() >= 0)) {
    total_size += 1 + 8;
  }

  // double minimumSpreadingRos = 4;
  if (!(this->minimumspreadingros() <= 0 && this->minimumspreadingros() >= 0)) {
    total_size += 1 + 8;
  }

  // bool stopAtGridEnd = 5;
  if (this->stopatgridend() != 0) {
    total_size += 1 + 1;
  }

  // bool breaching = 6;
  if (this->breaching() != 0) {
    total_size += 1 + 1;
  }

  // bool dynamicSpatialThreshold = 7;
  if (this->dynamicspatialthreshold() != 0) {
    total_size += 1 + 1;
  }

  // bool spotting = 8;
  if (this->spotting() != 0) {
    total_size += 1 + 1;
  }

  // bool purgeNonDisplayable = 9;
  if (this->purgenondisplayable() != 0) {
    total_size += 1 + 1;
  }

  // bool growthPercentileApplied = 13;
  if (this->growthpercentileapplied() != 0) {
    total_size += 1 + 1;
  }

  // double dx = 10;
  if (!(this->dx() <= 0 && this->dx() >= 0)) {
    total_size += 1 + 8;
  }

  // double dy = 11;
  if (!(this->dy() <= 0 && this->dy() >= 0)) {
    total_size += 1 + 8;
  }

  // double growthPercentile = 14;
  if (!(this->growthpercentile() <= 0 && this->growthpercentile() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobDefaults_FgmOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wise.defaults.JobDefaults.FgmOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const JobDefaults_FgmOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobDefaults_FgmOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wise.defaults.JobDefaults.FgmOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wise.defaults.JobDefaults.FgmOptions)
    MergeFrom(*source);
  }
}

void JobDefaults_FgmOptions::MergeFrom(const JobDefaults_FgmOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wise.defaults.JobDefaults.FgmOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maxaccts().size() > 0) {
    _internal_set_maxaccts(from._internal_maxaccts());
  }
  if (from.dt().size() > 0) {
    _internal_set_dt(from._internal_dt());
  }
  if (!(from.distanceresolution() <= 0 && from.distanceresolution() >= 0)) {
    _internal_set_distanceresolution(from._internal_distanceresolution());
  }
  if (!(from.perimeterresolution() <= 0 && from.perimeterresolution() >= 0)) {
    _internal_set_perimeterresolution(from._internal_perimeterresolution());
  }
  if (!(from.minimumspreadingros() <= 0 && from.minimumspreadingros() >= 0)) {
    _internal_set_minimumspreadingros(from._internal_minimumspreadingros());
  }
  if (from.stopatgridend() != 0) {
    _internal_set_stopatgridend(from._internal_stopatgridend());
  }
  if (from.breaching() != 0) {
    _internal_set_breaching(from._internal_breaching());
  }
  if (from.dynamicspatialthreshold() != 0) {
    _internal_set_dynamicspatialthreshold(from._internal_dynamicspatialthreshold());
  }
  if (from.spotting() != 0) {
    _internal_set_spotting(from._internal_spotting());
  }
  if (from.purgenondisplayable() != 0) {
    _internal_set_purgenondisplayable(from._internal_purgenondisplayable());
  }
  if (from.growthpercentileapplied() != 0) {
    _internal_set_growthpercentileapplied(from._internal_growthpercentileapplied());
  }
  if (!(from.dx() <= 0 && from.dx() >= 0)) {
    _internal_set_dx(from._internal_dx());
  }
  if (!(from.dy() <= 0 && from.dy() >= 0)) {
    _internal_set_dy(from._internal_dy());
  }
  if (!(from.growthpercentile() <= 0 && from.growthpercentile() >= 0)) {
    _internal_set_growthpercentile(from._internal_growthpercentile());
  }
}

void JobDefaults_FgmOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wise.defaults.JobDefaults.FgmOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobDefaults_FgmOptions::CopyFrom(const JobDefaults_FgmOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wise.defaults.JobDefaults.FgmOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobDefaults_FgmOptions::IsInitialized() const {
  return true;
}

void JobDefaults_FgmOptions::InternalSwap(JobDefaults_FgmOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  maxaccts_.Swap(&other->maxaccts_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dt_.Swap(&other->dt_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobDefaults_FgmOptions, growthpercentile_)
      + sizeof(JobDefaults_FgmOptions::growthpercentile_)
      - PROTOBUF_FIELD_OFFSET(JobDefaults_FgmOptions, distanceresolution_)>(
          reinterpret_cast<char*>(&distanceresolution_),
          reinterpret_cast<char*>(&other->distanceresolution_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobDefaults_FgmOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobDefaults_FbpOptions::InitAsDefaultInstance() {
}
class JobDefaults_FbpOptions::_Internal {
 public:
};

JobDefaults_FbpOptions::JobDefaults_FbpOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:wise.defaults.JobDefaults.FbpOptions)
}
JobDefaults_FbpOptions::JobDefaults_FbpOptions(const JobDefaults_FbpOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&windeffect_, &from.windeffect_,
    static_cast<size_t>(reinterpret_cast<char*>(&terraineffect_) -
    reinterpret_cast<char*>(&windeffect_)) + sizeof(terraineffect_));
  // @@protoc_insertion_point(copy_constructor:wise.defaults.JobDefaults.FbpOptions)
}

void JobDefaults_FbpOptions::SharedCtor() {
  ::memset(&windeffect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&terraineffect_) -
      reinterpret_cast<char*>(&windeffect_)) + sizeof(terraineffect_));
}

JobDefaults_FbpOptions::~JobDefaults_FbpOptions() {
  // @@protoc_insertion_point(destructor:wise.defaults.JobDefaults.FbpOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobDefaults_FbpOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JobDefaults_FbpOptions::ArenaDtor(void* object) {
  JobDefaults_FbpOptions* _this = reinterpret_cast< JobDefaults_FbpOptions* >(object);
  (void)_this;
}
void JobDefaults_FbpOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobDefaults_FbpOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobDefaults_FbpOptions& JobDefaults_FbpOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobDefaults_FbpOptions_wise_5fdefaults_2eproto.base);
  return *internal_default_instance();
}


void JobDefaults_FbpOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:wise.defaults.JobDefaults.FbpOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&windeffect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&terraineffect_) -
      reinterpret_cast<char*>(&windeffect_)) + sizeof(terraineffect_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobDefaults_FbpOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool windEffect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          windeffect_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool greenUp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          greenup_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool terrainEffect = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          terraineffect_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobDefaults_FbpOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wise.defaults.JobDefaults.FbpOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool windEffect = 1;
  if (this->windeffect() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_windeffect(), target);
  }

  // bool greenUp = 2;
  if (this->greenup() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_greenup(), target);
  }

  // bool terrainEffect = 3;
  if (this->terraineffect() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_terraineffect(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wise.defaults.JobDefaults.FbpOptions)
  return target;
}

size_t JobDefaults_FbpOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wise.defaults.JobDefaults.FbpOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool windEffect = 1;
  if (this->windeffect() != 0) {
    total_size += 1 + 1;
  }

  // bool greenUp = 2;
  if (this->greenup() != 0) {
    total_size += 1 + 1;
  }

  // bool terrainEffect = 3;
  if (this->terraineffect() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobDefaults_FbpOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wise.defaults.JobDefaults.FbpOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const JobDefaults_FbpOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobDefaults_FbpOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wise.defaults.JobDefaults.FbpOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wise.defaults.JobDefaults.FbpOptions)
    MergeFrom(*source);
  }
}

void JobDefaults_FbpOptions::MergeFrom(const JobDefaults_FbpOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wise.defaults.JobDefaults.FbpOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.windeffect() != 0) {
    _internal_set_windeffect(from._internal_windeffect());
  }
  if (from.greenup() != 0) {
    _internal_set_greenup(from._internal_greenup());
  }
  if (from.terraineffect() != 0) {
    _internal_set_terraineffect(from._internal_terraineffect());
  }
}

void JobDefaults_FbpOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wise.defaults.JobDefaults.FbpOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobDefaults_FbpOptions::CopyFrom(const JobDefaults_FbpOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wise.defaults.JobDefaults.FbpOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobDefaults_FbpOptions::IsInitialized() const {
  return true;
}

void JobDefaults_FbpOptions::InternalSwap(JobDefaults_FbpOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobDefaults_FbpOptions, terraineffect_)
      + sizeof(JobDefaults_FbpOptions::terraineffect_)
      - PROTOBUF_FIELD_OFFSET(JobDefaults_FbpOptions, windeffect_)>(
          reinterpret_cast<char*>(&windeffect_),
          reinterpret_cast<char*>(&other->windeffect_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobDefaults_FbpOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobDefaults_FmcOptions::InitAsDefaultInstance() {
}
class JobDefaults_FmcOptions::_Internal {
 public:
};

JobDefaults_FmcOptions::JobDefaults_FmcOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:wise.defaults.JobDefaults.FmcOptions)
}
JobDefaults_FmcOptions::JobDefaults_FmcOptions(const JobDefaults_FmcOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&nodataelev_, &from.nodataelev_,
    static_cast<size_t>(reinterpret_cast<char*>(&terrain_) -
    reinterpret_cast<char*>(&nodataelev_)) + sizeof(terrain_));
  // @@protoc_insertion_point(copy_constructor:wise.defaults.JobDefaults.FmcOptions)
}

void JobDefaults_FmcOptions::SharedCtor() {
  ::memset(&nodataelev_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&terrain_) -
      reinterpret_cast<char*>(&nodataelev_)) + sizeof(terrain_));
}

JobDefaults_FmcOptions::~JobDefaults_FmcOptions() {
  // @@protoc_insertion_point(destructor:wise.defaults.JobDefaults.FmcOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobDefaults_FmcOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JobDefaults_FmcOptions::ArenaDtor(void* object) {
  JobDefaults_FmcOptions* _this = reinterpret_cast< JobDefaults_FmcOptions* >(object);
  (void)_this;
}
void JobDefaults_FmcOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobDefaults_FmcOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobDefaults_FmcOptions& JobDefaults_FmcOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobDefaults_FmcOptions_wise_5fdefaults_2eproto.base);
  return *internal_default_instance();
}


void JobDefaults_FmcOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:wise.defaults.JobDefaults.FmcOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nodataelev_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&terrain_) -
      reinterpret_cast<char*>(&nodataelev_)) + sizeof(terrain_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobDefaults_FmcOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double noDataElev = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          nodataelev_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double percentOverride = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          percentoverride_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bool terrain = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          terrain_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobDefaults_FmcOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wise.defaults.JobDefaults.FmcOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double noDataElev = 1;
  if (!(this->nodataelev() <= 0 && this->nodataelev() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_nodataelev(), target);
  }

  // double percentOverride = 2;
  if (!(this->percentoverride() <= 0 && this->percentoverride() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_percentoverride(), target);
  }

  // bool terrain = 3;
  if (this->terrain() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_terrain(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wise.defaults.JobDefaults.FmcOptions)
  return target;
}

size_t JobDefaults_FmcOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wise.defaults.JobDefaults.FmcOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double noDataElev = 1;
  if (!(this->nodataelev() <= 0 && this->nodataelev() >= 0)) {
    total_size += 1 + 8;
  }

  // double percentOverride = 2;
  if (!(this->percentoverride() <= 0 && this->percentoverride() >= 0)) {
    total_size += 1 + 8;
  }

  // bool terrain = 3;
  if (this->terrain() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobDefaults_FmcOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wise.defaults.JobDefaults.FmcOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const JobDefaults_FmcOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobDefaults_FmcOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wise.defaults.JobDefaults.FmcOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wise.defaults.JobDefaults.FmcOptions)
    MergeFrom(*source);
  }
}

void JobDefaults_FmcOptions::MergeFrom(const JobDefaults_FmcOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wise.defaults.JobDefaults.FmcOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.nodataelev() <= 0 && from.nodataelev() >= 0)) {
    _internal_set_nodataelev(from._internal_nodataelev());
  }
  if (!(from.percentoverride() <= 0 && from.percentoverride() >= 0)) {
    _internal_set_percentoverride(from._internal_percentoverride());
  }
  if (from.terrain() != 0) {
    _internal_set_terrain(from._internal_terrain());
  }
}

void JobDefaults_FmcOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wise.defaults.JobDefaults.FmcOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobDefaults_FmcOptions::CopyFrom(const JobDefaults_FmcOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wise.defaults.JobDefaults.FmcOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobDefaults_FmcOptions::IsInitialized() const {
  return true;
}

void JobDefaults_FmcOptions::InternalSwap(JobDefaults_FmcOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobDefaults_FmcOptions, terrain_)
      + sizeof(JobDefaults_FmcOptions::terrain_)
      - PROTOBUF_FIELD_OFFSET(JobDefaults_FmcOptions, nodataelev_)>(
          reinterpret_cast<char*>(&nodataelev_),
          reinterpret_cast<char*>(&other->nodataelev_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobDefaults_FmcOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobDefaults_FwiOptions::InitAsDefaultInstance() {
}
class JobDefaults_FwiOptions::_Internal {
 public:
};

JobDefaults_FwiOptions::JobDefaults_FwiOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:wise.defaults.JobDefaults.FwiOptions)
}
JobDefaults_FwiOptions::JobDefaults_FwiOptions(const JobDefaults_FwiOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&fwispatialinterpolation_, &from.fwispatialinterpolation_,
    static_cast<size_t>(reinterpret_cast<char*>(&fwitemporalinterpolation_) -
    reinterpret_cast<char*>(&fwispatialinterpolation_)) + sizeof(fwitemporalinterpolation_));
  // @@protoc_insertion_point(copy_constructor:wise.defaults.JobDefaults.FwiOptions)
}

void JobDefaults_FwiOptions::SharedCtor() {
  ::memset(&fwispatialinterpolation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fwitemporalinterpolation_) -
      reinterpret_cast<char*>(&fwispatialinterpolation_)) + sizeof(fwitemporalinterpolation_));
}

JobDefaults_FwiOptions::~JobDefaults_FwiOptions() {
  // @@protoc_insertion_point(destructor:wise.defaults.JobDefaults.FwiOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobDefaults_FwiOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JobDefaults_FwiOptions::ArenaDtor(void* object) {
  JobDefaults_FwiOptions* _this = reinterpret_cast< JobDefaults_FwiOptions* >(object);
  (void)_this;
}
void JobDefaults_FwiOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobDefaults_FwiOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobDefaults_FwiOptions& JobDefaults_FwiOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobDefaults_FwiOptions_wise_5fdefaults_2eproto.base);
  return *internal_default_instance();
}


void JobDefaults_FwiOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:wise.defaults.JobDefaults.FwiOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fwispatialinterpolation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fwitemporalinterpolation_) -
      reinterpret_cast<char*>(&fwispatialinterpolation_)) + sizeof(fwitemporalinterpolation_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobDefaults_FwiOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool fwiSpatialInterpolation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          fwispatialinterpolation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool fwiFromSpatialWeather = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          fwifromspatialweather_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool historyOnEffectedFwi = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          historyoneffectedfwi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool burningConditionsOn = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          burningconditionson_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool fwiTemporalInterpolation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          fwitemporalinterpolation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobDefaults_FwiOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wise.defaults.JobDefaults.FwiOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool fwiSpatialInterpolation = 1;
  if (this->fwispatialinterpolation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_fwispatialinterpolation(), target);
  }

  // bool fwiFromSpatialWeather = 2;
  if (this->fwifromspatialweather() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_fwifromspatialweather(), target);
  }

  // bool historyOnEffectedFwi = 3;
  if (this->historyoneffectedfwi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_historyoneffectedfwi(), target);
  }

  // bool burningConditionsOn = 4;
  if (this->burningconditionson() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_burningconditionson(), target);
  }

  // bool fwiTemporalInterpolation = 5;
  if (this->fwitemporalinterpolation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_fwitemporalinterpolation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wise.defaults.JobDefaults.FwiOptions)
  return target;
}

size_t JobDefaults_FwiOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wise.defaults.JobDefaults.FwiOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool fwiSpatialInterpolation = 1;
  if (this->fwispatialinterpolation() != 0) {
    total_size += 1 + 1;
  }

  // bool fwiFromSpatialWeather = 2;
  if (this->fwifromspatialweather() != 0) {
    total_size += 1 + 1;
  }

  // bool historyOnEffectedFwi = 3;
  if (this->historyoneffectedfwi() != 0) {
    total_size += 1 + 1;
  }

  // bool burningConditionsOn = 4;
  if (this->burningconditionson() != 0) {
    total_size += 1 + 1;
  }

  // bool fwiTemporalInterpolation = 5;
  if (this->fwitemporalinterpolation() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobDefaults_FwiOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wise.defaults.JobDefaults.FwiOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const JobDefaults_FwiOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobDefaults_FwiOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wise.defaults.JobDefaults.FwiOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wise.defaults.JobDefaults.FwiOptions)
    MergeFrom(*source);
  }
}

void JobDefaults_FwiOptions::MergeFrom(const JobDefaults_FwiOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wise.defaults.JobDefaults.FwiOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fwispatialinterpolation() != 0) {
    _internal_set_fwispatialinterpolation(from._internal_fwispatialinterpolation());
  }
  if (from.fwifromspatialweather() != 0) {
    _internal_set_fwifromspatialweather(from._internal_fwifromspatialweather());
  }
  if (from.historyoneffectedfwi() != 0) {
    _internal_set_historyoneffectedfwi(from._internal_historyoneffectedfwi());
  }
  if (from.burningconditionson() != 0) {
    _internal_set_burningconditionson(from._internal_burningconditionson());
  }
  if (from.fwitemporalinterpolation() != 0) {
    _internal_set_fwitemporalinterpolation(from._internal_fwitemporalinterpolation());
  }
}

void JobDefaults_FwiOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wise.defaults.JobDefaults.FwiOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobDefaults_FwiOptions::CopyFrom(const JobDefaults_FwiOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wise.defaults.JobDefaults.FwiOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobDefaults_FwiOptions::IsInitialized() const {
  return true;
}

void JobDefaults_FwiOptions::InternalSwap(JobDefaults_FwiOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobDefaults_FwiOptions, fwitemporalinterpolation_)
      + sizeof(JobDefaults_FwiOptions::fwitemporalinterpolation_)
      - PROTOBUF_FIELD_OFFSET(JobDefaults_FwiOptions, fwispatialinterpolation_)>(
          reinterpret_cast<char*>(&fwispatialinterpolation_),
          reinterpret_cast<char*>(&other->fwispatialinterpolation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobDefaults_FwiOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobDefaults_SummaryFileDefaults::InitAsDefaultInstance() {
}
class JobDefaults_SummaryFileDefaults::_Internal {
 public:
};

JobDefaults_SummaryFileDefaults::JobDefaults_SummaryFileDefaults(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:wise.defaults.JobDefaults.SummaryFileDefaults)
}
JobDefaults_SummaryFileDefaults::JobDefaults_SummaryFileDefaults(const JobDefaults_SummaryFileDefaults& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&inputsummary_, &from.inputsummary_,
    static_cast<size_t>(reinterpret_cast<char*>(&timetoexecute_) -
    reinterpret_cast<char*>(&inputsummary_)) + sizeof(timetoexecute_));
  // @@protoc_insertion_point(copy_constructor:wise.defaults.JobDefaults.SummaryFileDefaults)
}

void JobDefaults_SummaryFileDefaults::SharedCtor() {
  ::memset(&inputsummary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timetoexecute_) -
      reinterpret_cast<char*>(&inputsummary_)) + sizeof(timetoexecute_));
}

JobDefaults_SummaryFileDefaults::~JobDefaults_SummaryFileDefaults() {
  // @@protoc_insertion_point(destructor:wise.defaults.JobDefaults.SummaryFileDefaults)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobDefaults_SummaryFileDefaults::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JobDefaults_SummaryFileDefaults::ArenaDtor(void* object) {
  JobDefaults_SummaryFileDefaults* _this = reinterpret_cast< JobDefaults_SummaryFileDefaults* >(object);
  (void)_this;
}
void JobDefaults_SummaryFileDefaults::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobDefaults_SummaryFileDefaults::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobDefaults_SummaryFileDefaults& JobDefaults_SummaryFileDefaults::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobDefaults_SummaryFileDefaults_wise_5fdefaults_2eproto.base);
  return *internal_default_instance();
}


void JobDefaults_SummaryFileDefaults::Clear() {
// @@protoc_insertion_point(message_clear_start:wise.defaults.JobDefaults.SummaryFileDefaults)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&inputsummary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timetoexecute_) -
      reinterpret_cast<char*>(&inputsummary_)) + sizeof(timetoexecute_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobDefaults_SummaryFileDefaults::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool inputSummary = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          inputsummary_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool elevationInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          elevationinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          location_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool gridInfo = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          gridinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool timeToExecute = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          timetoexecute_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobDefaults_SummaryFileDefaults::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wise.defaults.JobDefaults.SummaryFileDefaults)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool inputSummary = 1;
  if (this->inputsummary() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_inputsummary(), target);
  }

  // bool elevationInfo = 2;
  if (this->elevationinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_elevationinfo(), target);
  }

  // bool location = 3;
  if (this->location() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_location(), target);
  }

  // bool gridInfo = 4;
  if (this->gridinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_gridinfo(), target);
  }

  // bool timeToExecute = 5;
  if (this->timetoexecute() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_timetoexecute(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wise.defaults.JobDefaults.SummaryFileDefaults)
  return target;
}

size_t JobDefaults_SummaryFileDefaults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wise.defaults.JobDefaults.SummaryFileDefaults)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool inputSummary = 1;
  if (this->inputsummary() != 0) {
    total_size += 1 + 1;
  }

  // bool elevationInfo = 2;
  if (this->elevationinfo() != 0) {
    total_size += 1 + 1;
  }

  // bool location = 3;
  if (this->location() != 0) {
    total_size += 1 + 1;
  }

  // bool gridInfo = 4;
  if (this->gridinfo() != 0) {
    total_size += 1 + 1;
  }

  // bool timeToExecute = 5;
  if (this->timetoexecute() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobDefaults_SummaryFileDefaults::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wise.defaults.JobDefaults.SummaryFileDefaults)
  GOOGLE_DCHECK_NE(&from, this);
  const JobDefaults_SummaryFileDefaults* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobDefaults_SummaryFileDefaults>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wise.defaults.JobDefaults.SummaryFileDefaults)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wise.defaults.JobDefaults.SummaryFileDefaults)
    MergeFrom(*source);
  }
}

void JobDefaults_SummaryFileDefaults::MergeFrom(const JobDefaults_SummaryFileDefaults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wise.defaults.JobDefaults.SummaryFileDefaults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.inputsummary() != 0) {
    _internal_set_inputsummary(from._internal_inputsummary());
  }
  if (from.elevationinfo() != 0) {
    _internal_set_elevationinfo(from._internal_elevationinfo());
  }
  if (from.location() != 0) {
    _internal_set_location(from._internal_location());
  }
  if (from.gridinfo() != 0) {
    _internal_set_gridinfo(from._internal_gridinfo());
  }
  if (from.timetoexecute() != 0) {
    _internal_set_timetoexecute(from._internal_timetoexecute());
  }
}

void JobDefaults_SummaryFileDefaults::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wise.defaults.JobDefaults.SummaryFileDefaults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobDefaults_SummaryFileDefaults::CopyFrom(const JobDefaults_SummaryFileDefaults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wise.defaults.JobDefaults.SummaryFileDefaults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobDefaults_SummaryFileDefaults::IsInitialized() const {
  return true;
}

void JobDefaults_SummaryFileDefaults::InternalSwap(JobDefaults_SummaryFileDefaults* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobDefaults_SummaryFileDefaults, timetoexecute_)
      + sizeof(JobDefaults_SummaryFileDefaults::timetoexecute_)
      - PROTOBUF_FIELD_OFFSET(JobDefaults_SummaryFileDefaults, inputsummary_)>(
          reinterpret_cast<char*>(&inputsummary_),
          reinterpret_cast<char*>(&other->inputsummary_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobDefaults_SummaryFileDefaults::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobDefaults_VectorFileMetadata::InitAsDefaultInstance() {
}
class JobDefaults_VectorFileMetadata::_Internal {
 public:
};

JobDefaults_VectorFileMetadata::JobDefaults_VectorFileMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:wise.defaults.JobDefaults.VectorFileMetadata)
}
JobDefaults_VectorFileMetadata::JobDefaults_VectorFileMetadata(const JobDefaults_VectorFileMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&perimeterunit_, &from.perimeterunit_,
    static_cast<size_t>(reinterpret_cast<char*>(&wiseversion_) -
    reinterpret_cast<char*>(&perimeterunit_)) + sizeof(wiseversion_));
  // @@protoc_insertion_point(copy_constructor:wise.defaults.JobDefaults.VectorFileMetadata)
}

void JobDefaults_VectorFileMetadata::SharedCtor() {
  ::memset(&perimeterunit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wiseversion_) -
      reinterpret_cast<char*>(&perimeterunit_)) + sizeof(wiseversion_));
}

JobDefaults_VectorFileMetadata::~JobDefaults_VectorFileMetadata() {
  // @@protoc_insertion_point(destructor:wise.defaults.JobDefaults.VectorFileMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobDefaults_VectorFileMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void JobDefaults_VectorFileMetadata::ArenaDtor(void* object) {
  JobDefaults_VectorFileMetadata* _this = reinterpret_cast< JobDefaults_VectorFileMetadata* >(object);
  (void)_this;
}
void JobDefaults_VectorFileMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobDefaults_VectorFileMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobDefaults_VectorFileMetadata& JobDefaults_VectorFileMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobDefaults_VectorFileMetadata_wise_5fdefaults_2eproto.base);
  return *internal_default_instance();
}


void JobDefaults_VectorFileMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:wise.defaults.JobDefaults.VectorFileMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&perimeterunit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wiseversion_) -
      reinterpret_cast<char*>(&perimeterunit_)) + sizeof(wiseversion_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobDefaults_VectorFileMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .wise.defaults.JobDefaults.VectorFileMetadata.PerimeterUnit perimeterUnit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_perimeterunit(static_cast<::wise::defaults::JobDefaults_VectorFileMetadata_PerimeterUnit>(val));
        } else goto handle_unusual;
        continue;
      // .wise.defaults.JobDefaults.VectorFileMetadata.AreaUnits areaUnits = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_areaunits(static_cast<::wise::defaults::JobDefaults_VectorFileMetadata_AreaUnits>(val));
        } else goto handle_unusual;
        continue;
      // bool activePerimeter = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          activeperimeter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool totalPerimeter = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          totalperimeter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool fireSize = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          firesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool simulationDate = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          simulationdate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool ignitionName = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ignitionname_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool jobName = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          jobname_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool scenarioName = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          scenarioname_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool wiseVersion = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          wiseversion_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobDefaults_VectorFileMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wise.defaults.JobDefaults.VectorFileMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .wise.defaults.JobDefaults.VectorFileMetadata.PerimeterUnit perimeterUnit = 1;
  if (this->perimeterunit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_perimeterunit(), target);
  }

  // .wise.defaults.JobDefaults.VectorFileMetadata.AreaUnits areaUnits = 2;
  if (this->areaunits() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_areaunits(), target);
  }

  // bool activePerimeter = 3;
  if (this->activeperimeter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_activeperimeter(), target);
  }

  // bool totalPerimeter = 4;
  if (this->totalperimeter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_totalperimeter(), target);
  }

  // bool fireSize = 5;
  if (this->firesize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_firesize(), target);
  }

  // bool simulationDate = 6;
  if (this->simulationdate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_simulationdate(), target);
  }

  // bool ignitionName = 7;
  if (this->ignitionname() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_ignitionname(), target);
  }

  // bool jobName = 8;
  if (this->jobname() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_jobname(), target);
  }

  // bool scenarioName = 9;
  if (this->scenarioname() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_scenarioname(), target);
  }

  // bool wiseVersion = 10;
  if (this->wiseversion() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_wiseversion(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wise.defaults.JobDefaults.VectorFileMetadata)
  return target;
}

size_t JobDefaults_VectorFileMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wise.defaults.JobDefaults.VectorFileMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .wise.defaults.JobDefaults.VectorFileMetadata.PerimeterUnit perimeterUnit = 1;
  if (this->perimeterunit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_perimeterunit());
  }

  // .wise.defaults.JobDefaults.VectorFileMetadata.AreaUnits areaUnits = 2;
  if (this->areaunits() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_areaunits());
  }

  // bool activePerimeter = 3;
  if (this->activeperimeter() != 0) {
    total_size += 1 + 1;
  }

  // bool totalPerimeter = 4;
  if (this->totalperimeter() != 0) {
    total_size += 1 + 1;
  }

  // bool fireSize = 5;
  if (this->firesize() != 0) {
    total_size += 1 + 1;
  }

  // bool simulationDate = 6;
  if (this->simulationdate() != 0) {
    total_size += 1 + 1;
  }

  // bool ignitionName = 7;
  if (this->ignitionname() != 0) {
    total_size += 1 + 1;
  }

  // bool jobName = 8;
  if (this->jobname() != 0) {
    total_size += 1 + 1;
  }

  // bool scenarioName = 9;
  if (this->scenarioname() != 0) {
    total_size += 1 + 1;
  }

  // bool wiseVersion = 10;
  if (this->wiseversion() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobDefaults_VectorFileMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wise.defaults.JobDefaults.VectorFileMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const JobDefaults_VectorFileMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobDefaults_VectorFileMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wise.defaults.JobDefaults.VectorFileMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wise.defaults.JobDefaults.VectorFileMetadata)
    MergeFrom(*source);
  }
}

void JobDefaults_VectorFileMetadata::MergeFrom(const JobDefaults_VectorFileMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wise.defaults.JobDefaults.VectorFileMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.perimeterunit() != 0) {
    _internal_set_perimeterunit(from._internal_perimeterunit());
  }
  if (from.areaunits() != 0) {
    _internal_set_areaunits(from._internal_areaunits());
  }
  if (from.activeperimeter() != 0) {
    _internal_set_activeperimeter(from._internal_activeperimeter());
  }
  if (from.totalperimeter() != 0) {
    _internal_set_totalperimeter(from._internal_totalperimeter());
  }
  if (from.firesize() != 0) {
    _internal_set_firesize(from._internal_firesize());
  }
  if (from.simulationdate() != 0) {
    _internal_set_simulationdate(from._internal_simulationdate());
  }
  if (from.ignitionname() != 0) {
    _internal_set_ignitionname(from._internal_ignitionname());
  }
  if (from.jobname() != 0) {
    _internal_set_jobname(from._internal_jobname());
  }
  if (from.scenarioname() != 0) {
    _internal_set_scenarioname(from._internal_scenarioname());
  }
  if (from.wiseversion() != 0) {
    _internal_set_wiseversion(from._internal_wiseversion());
  }
}

void JobDefaults_VectorFileMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wise.defaults.JobDefaults.VectorFileMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobDefaults_VectorFileMetadata::CopyFrom(const JobDefaults_VectorFileMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wise.defaults.JobDefaults.VectorFileMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobDefaults_VectorFileMetadata::IsInitialized() const {
  return true;
}

void JobDefaults_VectorFileMetadata::InternalSwap(JobDefaults_VectorFileMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobDefaults_VectorFileMetadata, wiseversion_)
      + sizeof(JobDefaults_VectorFileMetadata::wiseversion_)
      - PROTOBUF_FIELD_OFFSET(JobDefaults_VectorFileMetadata, perimeterunit_)>(
          reinterpret_cast<char*>(&perimeterunit_),
          reinterpret_cast<char*>(&other->perimeterunit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobDefaults_VectorFileMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobDefaults::InitAsDefaultInstance() {
  ::wise::defaults::_JobDefaults_default_instance_._instance.get_mutable()->fgmoptions_ = const_cast< ::wise::defaults::JobDefaults_FgmOptions*>(
      ::wise::defaults::JobDefaults_FgmOptions::internal_default_instance());
  ::wise::defaults::_JobDefaults_default_instance_._instance.get_mutable()->fbpoptions_ = const_cast< ::wise::defaults::JobDefaults_FbpOptions*>(
      ::wise::defaults::JobDefaults_FbpOptions::internal_default_instance());
  ::wise::defaults::_JobDefaults_default_instance_._instance.get_mutable()->fmcoptions_ = const_cast< ::wise::defaults::JobDefaults_FmcOptions*>(
      ::wise::defaults::JobDefaults_FmcOptions::internal_default_instance());
  ::wise::defaults::_JobDefaults_default_instance_._instance.get_mutable()->fwioptions_ = const_cast< ::wise::defaults::JobDefaults_FwiOptions*>(
      ::wise::defaults::JobDefaults_FwiOptions::internal_default_instance());
  ::wise::defaults::_JobDefaults_default_instance_._instance.get_mutable()->summaryfiledefaults_ = const_cast< ::wise::defaults::JobDefaults_SummaryFileDefaults*>(
      ::wise::defaults::JobDefaults_SummaryFileDefaults::internal_default_instance());
  ::wise::defaults::_JobDefaults_default_instance_._instance.get_mutable()->vectorfilemetadata_ = const_cast< ::wise::defaults::JobDefaults_VectorFileMetadata*>(
      ::wise::defaults::JobDefaults_VectorFileMetadata::internal_default_instance());
}
class JobDefaults::_Internal {
 public:
  static const ::wise::defaults::JobDefaults_FgmOptions& fgmoptions(const JobDefaults* msg);
  static const ::wise::defaults::JobDefaults_FbpOptions& fbpoptions(const JobDefaults* msg);
  static const ::wise::defaults::JobDefaults_FmcOptions& fmcoptions(const JobDefaults* msg);
  static const ::wise::defaults::JobDefaults_FwiOptions& fwioptions(const JobDefaults* msg);
  static const ::wise::defaults::JobDefaults_SummaryFileDefaults& summaryfiledefaults(const JobDefaults* msg);
  static const ::wise::defaults::JobDefaults_VectorFileMetadata& vectorfilemetadata(const JobDefaults* msg);
};

const ::wise::defaults::JobDefaults_FgmOptions&
JobDefaults::_Internal::fgmoptions(const JobDefaults* msg) {
  return *msg->fgmoptions_;
}
const ::wise::defaults::JobDefaults_FbpOptions&
JobDefaults::_Internal::fbpoptions(const JobDefaults* msg) {
  return *msg->fbpoptions_;
}
const ::wise::defaults::JobDefaults_FmcOptions&
JobDefaults::_Internal::fmcoptions(const JobDefaults* msg) {
  return *msg->fmcoptions_;
}
const ::wise::defaults::JobDefaults_FwiOptions&
JobDefaults::_Internal::fwioptions(const JobDefaults* msg) {
  return *msg->fwioptions_;
}
const ::wise::defaults::JobDefaults_SummaryFileDefaults&
JobDefaults::_Internal::summaryfiledefaults(const JobDefaults* msg) {
  return *msg->summaryfiledefaults_;
}
const ::wise::defaults::JobDefaults_VectorFileMetadata&
JobDefaults::_Internal::vectorfilemetadata(const JobDefaults* msg) {
  return *msg->vectorfilemetadata_;
}
JobDefaults::JobDefaults(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:wise.defaults.JobDefaults)
}
JobDefaults::JobDefaults(const JobDefaults& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fgmoptions()) {
    fgmoptions_ = new ::wise::defaults::JobDefaults_FgmOptions(*from.fgmoptions_);
  } else {
    fgmoptions_ = nullptr;
  }
  if (from._internal_has_fbpoptions()) {
    fbpoptions_ = new ::wise::defaults::JobDefaults_FbpOptions(*from.fbpoptions_);
  } else {
    fbpoptions_ = nullptr;
  }
  if (from._internal_has_fmcoptions()) {
    fmcoptions_ = new ::wise::defaults::JobDefaults_FmcOptions(*from.fmcoptions_);
  } else {
    fmcoptions_ = nullptr;
  }
  if (from._internal_has_fwioptions()) {
    fwioptions_ = new ::wise::defaults::JobDefaults_FwiOptions(*from.fwioptions_);
  } else {
    fwioptions_ = nullptr;
  }
  if (from._internal_has_summaryfiledefaults()) {
    summaryfiledefaults_ = new ::wise::defaults::JobDefaults_SummaryFileDefaults(*from.summaryfiledefaults_);
  } else {
    summaryfiledefaults_ = nullptr;
  }
  if (from._internal_has_vectorfilemetadata()) {
    vectorfilemetadata_ = new ::wise::defaults::JobDefaults_VectorFileMetadata(*from.vectorfilemetadata_);
  } else {
    vectorfilemetadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:wise.defaults.JobDefaults)
}

void JobDefaults::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JobDefaults_wise_5fdefaults_2eproto.base);
  ::memset(&fgmoptions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vectorfilemetadata_) -
      reinterpret_cast<char*>(&fgmoptions_)) + sizeof(vectorfilemetadata_));
}

JobDefaults::~JobDefaults() {
  // @@protoc_insertion_point(destructor:wise.defaults.JobDefaults)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobDefaults::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete fgmoptions_;
  if (this != internal_default_instance()) delete fbpoptions_;
  if (this != internal_default_instance()) delete fmcoptions_;
  if (this != internal_default_instance()) delete fwioptions_;
  if (this != internal_default_instance()) delete summaryfiledefaults_;
  if (this != internal_default_instance()) delete vectorfilemetadata_;
}

void JobDefaults::ArenaDtor(void* object) {
  JobDefaults* _this = reinterpret_cast< JobDefaults* >(object);
  (void)_this;
}
void JobDefaults::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobDefaults::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobDefaults& JobDefaults::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobDefaults_wise_5fdefaults_2eproto.base);
  return *internal_default_instance();
}


void JobDefaults::Clear() {
// @@protoc_insertion_point(message_clear_start:wise.defaults.JobDefaults)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && fgmoptions_ != nullptr) {
    delete fgmoptions_;
  }
  fgmoptions_ = nullptr;
  if (GetArena() == nullptr && fbpoptions_ != nullptr) {
    delete fbpoptions_;
  }
  fbpoptions_ = nullptr;
  if (GetArena() == nullptr && fmcoptions_ != nullptr) {
    delete fmcoptions_;
  }
  fmcoptions_ = nullptr;
  if (GetArena() == nullptr && fwioptions_ != nullptr) {
    delete fwioptions_;
  }
  fwioptions_ = nullptr;
  if (GetArena() == nullptr && summaryfiledefaults_ != nullptr) {
    delete summaryfiledefaults_;
  }
  summaryfiledefaults_ = nullptr;
  if (GetArena() == nullptr && vectorfilemetadata_ != nullptr) {
    delete vectorfilemetadata_;
  }
  vectorfilemetadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobDefaults::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .wise.defaults.JobDefaults.FgmOptions fgmOptions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fgmoptions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .wise.defaults.JobDefaults.FbpOptions fbpOptions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fbpoptions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .wise.defaults.JobDefaults.FmcOptions fmcOptions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_fmcoptions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .wise.defaults.JobDefaults.FwiOptions fwiOptions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_fwioptions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .wise.defaults.JobDefaults.SummaryFileDefaults summaryFileDefaults = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_summaryfiledefaults(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .wise.defaults.JobDefaults.VectorFileMetadata vectorFileMetadata = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_vectorfilemetadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobDefaults::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wise.defaults.JobDefaults)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .wise.defaults.JobDefaults.FgmOptions fgmOptions = 1;
  if (this->has_fgmoptions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::fgmoptions(this), target, stream);
  }

  // .wise.defaults.JobDefaults.FbpOptions fbpOptions = 2;
  if (this->has_fbpoptions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::fbpoptions(this), target, stream);
  }

  // .wise.defaults.JobDefaults.FmcOptions fmcOptions = 3;
  if (this->has_fmcoptions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::fmcoptions(this), target, stream);
  }

  // .wise.defaults.JobDefaults.FwiOptions fwiOptions = 4;
  if (this->has_fwioptions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::fwioptions(this), target, stream);
  }

  // .wise.defaults.JobDefaults.SummaryFileDefaults summaryFileDefaults = 5;
  if (this->has_summaryfiledefaults()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::summaryfiledefaults(this), target, stream);
  }

  // .wise.defaults.JobDefaults.VectorFileMetadata vectorFileMetadata = 6;
  if (this->has_vectorfilemetadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::vectorfilemetadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wise.defaults.JobDefaults)
  return target;
}

size_t JobDefaults::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wise.defaults.JobDefaults)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .wise.defaults.JobDefaults.FgmOptions fgmOptions = 1;
  if (this->has_fgmoptions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fgmoptions_);
  }

  // .wise.defaults.JobDefaults.FbpOptions fbpOptions = 2;
  if (this->has_fbpoptions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fbpoptions_);
  }

  // .wise.defaults.JobDefaults.FmcOptions fmcOptions = 3;
  if (this->has_fmcoptions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fmcoptions_);
  }

  // .wise.defaults.JobDefaults.FwiOptions fwiOptions = 4;
  if (this->has_fwioptions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fwioptions_);
  }

  // .wise.defaults.JobDefaults.SummaryFileDefaults summaryFileDefaults = 5;
  if (this->has_summaryfiledefaults()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *summaryfiledefaults_);
  }

  // .wise.defaults.JobDefaults.VectorFileMetadata vectorFileMetadata = 6;
  if (this->has_vectorfilemetadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vectorfilemetadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobDefaults::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wise.defaults.JobDefaults)
  GOOGLE_DCHECK_NE(&from, this);
  const JobDefaults* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobDefaults>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wise.defaults.JobDefaults)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wise.defaults.JobDefaults)
    MergeFrom(*source);
  }
}

void JobDefaults::MergeFrom(const JobDefaults& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wise.defaults.JobDefaults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fgmoptions()) {
    _internal_mutable_fgmoptions()->::wise::defaults::JobDefaults_FgmOptions::MergeFrom(from._internal_fgmoptions());
  }
  if (from.has_fbpoptions()) {
    _internal_mutable_fbpoptions()->::wise::defaults::JobDefaults_FbpOptions::MergeFrom(from._internal_fbpoptions());
  }
  if (from.has_fmcoptions()) {
    _internal_mutable_fmcoptions()->::wise::defaults::JobDefaults_FmcOptions::MergeFrom(from._internal_fmcoptions());
  }
  if (from.has_fwioptions()) {
    _internal_mutable_fwioptions()->::wise::defaults::JobDefaults_FwiOptions::MergeFrom(from._internal_fwioptions());
  }
  if (from.has_summaryfiledefaults()) {
    _internal_mutable_summaryfiledefaults()->::wise::defaults::JobDefaults_SummaryFileDefaults::MergeFrom(from._internal_summaryfiledefaults());
  }
  if (from.has_vectorfilemetadata()) {
    _internal_mutable_vectorfilemetadata()->::wise::defaults::JobDefaults_VectorFileMetadata::MergeFrom(from._internal_vectorfilemetadata());
  }
}

void JobDefaults::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wise.defaults.JobDefaults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobDefaults::CopyFrom(const JobDefaults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wise.defaults.JobDefaults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobDefaults::IsInitialized() const {
  return true;
}

void JobDefaults::InternalSwap(JobDefaults* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobDefaults, vectorfilemetadata_)
      + sizeof(JobDefaults::vectorfilemetadata_)
      - PROTOBUF_FIELD_OFFSET(JobDefaults, fgmoptions_)>(
          reinterpret_cast<char*>(&fgmoptions_),
          reinterpret_cast<char*>(&other->fgmoptions_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobDefaults::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace defaults
}  // namespace wise
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::wise::defaults::JobDefaults_FgmOptions* Arena::CreateMaybeMessage< ::wise::defaults::JobDefaults_FgmOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wise::defaults::JobDefaults_FgmOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::wise::defaults::JobDefaults_FbpOptions* Arena::CreateMaybeMessage< ::wise::defaults::JobDefaults_FbpOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wise::defaults::JobDefaults_FbpOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::wise::defaults::JobDefaults_FmcOptions* Arena::CreateMaybeMessage< ::wise::defaults::JobDefaults_FmcOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wise::defaults::JobDefaults_FmcOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::wise::defaults::JobDefaults_FwiOptions* Arena::CreateMaybeMessage< ::wise::defaults::JobDefaults_FwiOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wise::defaults::JobDefaults_FwiOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::wise::defaults::JobDefaults_SummaryFileDefaults* Arena::CreateMaybeMessage< ::wise::defaults::JobDefaults_SummaryFileDefaults >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wise::defaults::JobDefaults_SummaryFileDefaults >(arena);
}
template<> PROTOBUF_NOINLINE ::wise::defaults::JobDefaults_VectorFileMetadata* Arena::CreateMaybeMessage< ::wise::defaults::JobDefaults_VectorFileMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wise::defaults::JobDefaults_VectorFileMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::wise::defaults::JobDefaults* Arena::CreateMaybeMessage< ::wise::defaults::JobDefaults >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wise::defaults::JobDefaults >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
