// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: validation_report.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_validation_5freport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_validation_5freport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_validation_5freport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_validation_5freport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_validation_5freport_2eproto;
namespace WISE {
namespace Comms {
namespace ValidationProto {
class ValidationReport;
class ValidationReportDefaultTypeInternal;
extern ValidationReportDefaultTypeInternal _ValidationReport_default_instance_;
class ValidationReport_ValidationNode;
class ValidationReport_ValidationNodeDefaultTypeInternal;
extern ValidationReport_ValidationNodeDefaultTypeInternal _ValidationReport_ValidationNode_default_instance_;
class ValidationReport_ValidationNode_ErrorObject;
class ValidationReport_ValidationNode_ErrorObjectDefaultTypeInternal;
extern ValidationReport_ValidationNode_ErrorObjectDefaultTypeInternal _ValidationReport_ValidationNode_ErrorObject_default_instance_;
}  // namespace ValidationProto
}  // namespace Comms
}  // namespace WISE
PROTOBUF_NAMESPACE_OPEN
template<> ::WISE::Comms::ValidationProto::ValidationReport* Arena::CreateMaybeMessage<::WISE::Comms::ValidationProto::ValidationReport>(Arena*);
template<> ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* Arena::CreateMaybeMessage<::WISE::Comms::ValidationProto::ValidationReport_ValidationNode>(Arena*);
template<> ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject* Arena::CreateMaybeMessage<::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace WISE {
namespace Comms {
namespace ValidationProto {

enum ValidationReport_ValidationNode_ErrorLevel : int {
  ValidationReport_ValidationNode_ErrorLevel_NONE = 0,
  ValidationReport_ValidationNode_ErrorLevel_INFORMATION = 1,
  ValidationReport_ValidationNode_ErrorLevel_WARNING = 2,
  ValidationReport_ValidationNode_ErrorLevel_SEVERE = 3,
  ValidationReport_ValidationNode_ErrorLevel_ValidationReport_ValidationNode_ErrorLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ValidationReport_ValidationNode_ErrorLevel_ValidationReport_ValidationNode_ErrorLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ValidationReport_ValidationNode_ErrorLevel_IsValid(int value);
constexpr ValidationReport_ValidationNode_ErrorLevel ValidationReport_ValidationNode_ErrorLevel_ErrorLevel_MIN = ValidationReport_ValidationNode_ErrorLevel_NONE;
constexpr ValidationReport_ValidationNode_ErrorLevel ValidationReport_ValidationNode_ErrorLevel_ErrorLevel_MAX = ValidationReport_ValidationNode_ErrorLevel_SEVERE;
constexpr int ValidationReport_ValidationNode_ErrorLevel_ErrorLevel_ARRAYSIZE = ValidationReport_ValidationNode_ErrorLevel_ErrorLevel_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ValidationReport_ValidationNode_ErrorLevel_descriptor();
template<typename T>
inline const std::string& ValidationReport_ValidationNode_ErrorLevel_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ValidationReport_ValidationNode_ErrorLevel>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ValidationReport_ValidationNode_ErrorLevel_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ValidationReport_ValidationNode_ErrorLevel_descriptor(), enum_t_value);
}
inline bool ValidationReport_ValidationNode_ErrorLevel_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ValidationReport_ValidationNode_ErrorLevel* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ValidationReport_ValidationNode_ErrorLevel>(
    ValidationReport_ValidationNode_ErrorLevel_descriptor(), name, value);
}
// ===================================================================

class ValidationReport_ValidationNode_ErrorObject PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject) */ {
 public:
  inline ValidationReport_ValidationNode_ErrorObject() : ValidationReport_ValidationNode_ErrorObject(nullptr) {}
  virtual ~ValidationReport_ValidationNode_ErrorObject();

  ValidationReport_ValidationNode_ErrorObject(const ValidationReport_ValidationNode_ErrorObject& from);
  ValidationReport_ValidationNode_ErrorObject(ValidationReport_ValidationNode_ErrorObject&& from) noexcept
    : ValidationReport_ValidationNode_ErrorObject() {
    *this = ::std::move(from);
  }

  inline ValidationReport_ValidationNode_ErrorObject& operator=(const ValidationReport_ValidationNode_ErrorObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidationReport_ValidationNode_ErrorObject& operator=(ValidationReport_ValidationNode_ErrorObject&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ValidationReport_ValidationNode_ErrorObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidationReport_ValidationNode_ErrorObject* internal_default_instance() {
    return reinterpret_cast<const ValidationReport_ValidationNode_ErrorObject*>(
               &_ValidationReport_ValidationNode_ErrorObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ValidationReport_ValidationNode_ErrorObject& a, ValidationReport_ValidationNode_ErrorObject& b) {
    a.Swap(&b);
  }
  inline void Swap(ValidationReport_ValidationNode_ErrorObject* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidationReport_ValidationNode_ErrorObject* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ValidationReport_ValidationNode_ErrorObject* New() const final {
    return CreateMaybeMessage<ValidationReport_ValidationNode_ErrorObject>(nullptr);
  }

  ValidationReport_ValidationNode_ErrorObject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ValidationReport_ValidationNode_ErrorObject>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ValidationReport_ValidationNode_ErrorObject& from);
  void MergeFrom(const ValidationReport_ValidationNode_ErrorObject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValidationReport_ValidationNode_ErrorObject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject";
  }
  protected:
  explicit ValidationReport_ValidationNode_ErrorObject(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_validation_5freport_2eproto);
    return ::descriptor_table_validation_5freport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.protobuf.StringValue value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const PROTOBUF_NAMESPACE_ID::StringValue& value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_value();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_value();
  void set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      PROTOBUF_NAMESPACE_ID::StringValue* value);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_value();

  // @@protoc_insertion_point(class_scope:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  PROTOBUF_NAMESPACE_ID::StringValue* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_validation_5freport_2eproto;
};
// -------------------------------------------------------------------

class ValidationReport_ValidationNode PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:WISE.Comms.ValidationProto.ValidationReport.ValidationNode) */ {
 public:
  inline ValidationReport_ValidationNode() : ValidationReport_ValidationNode(nullptr) {}
  virtual ~ValidationReport_ValidationNode();

  ValidationReport_ValidationNode(const ValidationReport_ValidationNode& from);
  ValidationReport_ValidationNode(ValidationReport_ValidationNode&& from) noexcept
    : ValidationReport_ValidationNode() {
    *this = ::std::move(from);
  }

  inline ValidationReport_ValidationNode& operator=(const ValidationReport_ValidationNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidationReport_ValidationNode& operator=(ValidationReport_ValidationNode&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ValidationReport_ValidationNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidationReport_ValidationNode* internal_default_instance() {
    return reinterpret_cast<const ValidationReport_ValidationNode*>(
               &_ValidationReport_ValidationNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ValidationReport_ValidationNode& a, ValidationReport_ValidationNode& b) {
    a.Swap(&b);
  }
  inline void Swap(ValidationReport_ValidationNode* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidationReport_ValidationNode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ValidationReport_ValidationNode* New() const final {
    return CreateMaybeMessage<ValidationReport_ValidationNode>(nullptr);
  }

  ValidationReport_ValidationNode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ValidationReport_ValidationNode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ValidationReport_ValidationNode& from);
  void MergeFrom(const ValidationReport_ValidationNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValidationReport_ValidationNode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "WISE.Comms.ValidationProto.ValidationReport.ValidationNode";
  }
  protected:
  explicit ValidationReport_ValidationNode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_validation_5freport_2eproto);
    return ::descriptor_table_validation_5freport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ValidationReport_ValidationNode_ErrorObject ErrorObject;

  typedef ValidationReport_ValidationNode_ErrorLevel ErrorLevel;
  static constexpr ErrorLevel NONE =
    ValidationReport_ValidationNode_ErrorLevel_NONE;
  static constexpr ErrorLevel INFORMATION =
    ValidationReport_ValidationNode_ErrorLevel_INFORMATION;
  static constexpr ErrorLevel WARNING =
    ValidationReport_ValidationNode_ErrorLevel_WARNING;
  static constexpr ErrorLevel SEVERE =
    ValidationReport_ValidationNode_ErrorLevel_SEVERE;
  static inline bool ErrorLevel_IsValid(int value) {
    return ValidationReport_ValidationNode_ErrorLevel_IsValid(value);
  }
  static constexpr ErrorLevel ErrorLevel_MIN =
    ValidationReport_ValidationNode_ErrorLevel_ErrorLevel_MIN;
  static constexpr ErrorLevel ErrorLevel_MAX =
    ValidationReport_ValidationNode_ErrorLevel_ErrorLevel_MAX;
  static constexpr int ErrorLevel_ARRAYSIZE =
    ValidationReport_ValidationNode_ErrorLevel_ErrorLevel_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ErrorLevel_descriptor() {
    return ValidationReport_ValidationNode_ErrorLevel_descriptor();
  }
  template<typename T>
  static inline const std::string& ErrorLevel_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ErrorLevel>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ErrorLevel_Name.");
    return ValidationReport_ValidationNode_ErrorLevel_Name(enum_t_value);
  }
  static inline bool ErrorLevel_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ErrorLevel* value) {
    return ValidationReport_ValidationNode_ErrorLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kErrorValuesFieldNumber = 3,
    kChildrenFieldNumber = 5,
    kProtobufNameFieldNumber = 2,
    kErrorIdFieldNumber = 4,
    kDetailsFieldNumber = 6,
    kErrorLevelFieldNumber = 1,
  };
  // repeated .WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject error_values = 3;
  int error_values_size() const;
  private:
  int _internal_error_values_size() const;
  public:
  void clear_error_values();
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject* mutable_error_values(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject >*
      mutable_error_values();
  private:
  const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject& _internal_error_values(int index) const;
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject* _internal_add_error_values();
  public:
  const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject& error_values(int index) const;
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject* add_error_values();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject >&
      error_values() const;

  // repeated .WISE.Comms.ValidationProto.ValidationReport.ValidationNode children = 5;
  int children_size() const;
  private:
  int _internal_children_size() const;
  public:
  void clear_children();
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* mutable_children(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode >*
      mutable_children();
  private:
  const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode& _internal_children(int index) const;
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* _internal_add_children();
  public:
  const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode& children(int index) const;
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* add_children();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode >&
      children() const;

  // string protobuf_name = 2;
  void clear_protobuf_name();
  const std::string& protobuf_name() const;
  void set_protobuf_name(const std::string& value);
  void set_protobuf_name(std::string&& value);
  void set_protobuf_name(const char* value);
  void set_protobuf_name(const char* value, size_t size);
  std::string* mutable_protobuf_name();
  std::string* release_protobuf_name();
  void set_allocated_protobuf_name(std::string* protobuf_name);
  private:
  const std::string& _internal_protobuf_name() const;
  void _internal_set_protobuf_name(const std::string& value);
  std::string* _internal_mutable_protobuf_name();
  public:

  // .google.protobuf.StringValue error_id = 4;
  bool has_error_id() const;
  private:
  bool _internal_has_error_id() const;
  public:
  void clear_error_id();
  const PROTOBUF_NAMESPACE_ID::StringValue& error_id() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_error_id();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_error_id();
  void set_allocated_error_id(PROTOBUF_NAMESPACE_ID::StringValue* error_id);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_error_id() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_error_id();
  public:
  void unsafe_arena_set_allocated_error_id(
      PROTOBUF_NAMESPACE_ID::StringValue* error_id);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_error_id();

  // .google.protobuf.StringValue details = 6;
  bool has_details() const;
  private:
  bool _internal_has_details() const;
  public:
  void clear_details();
  const PROTOBUF_NAMESPACE_ID::StringValue& details() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_details();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_details();
  void set_allocated_details(PROTOBUF_NAMESPACE_ID::StringValue* details);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_details() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_details();
  public:
  void unsafe_arena_set_allocated_details(
      PROTOBUF_NAMESPACE_ID::StringValue* details);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_details();

  // .WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorLevel error_level = 1;
  void clear_error_level();
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel error_level() const;
  void set_error_level(::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel value);
  private:
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel _internal_error_level() const;
  void _internal_set_error_level(::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel value);
  public:

  // @@protoc_insertion_point(class_scope:WISE.Comms.ValidationProto.ValidationReport.ValidationNode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject > error_values_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode > children_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr protobuf_name_;
  PROTOBUF_NAMESPACE_ID::StringValue* error_id_;
  PROTOBUF_NAMESPACE_ID::StringValue* details_;
  int error_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_validation_5freport_2eproto;
};
// -------------------------------------------------------------------

class ValidationReport PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:WISE.Comms.ValidationProto.ValidationReport) */ {
 public:
  inline ValidationReport() : ValidationReport(nullptr) {}
  virtual ~ValidationReport();

  ValidationReport(const ValidationReport& from);
  ValidationReport(ValidationReport&& from) noexcept
    : ValidationReport() {
    *this = ::std::move(from);
  }

  inline ValidationReport& operator=(const ValidationReport& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidationReport& operator=(ValidationReport&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ValidationReport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidationReport* internal_default_instance() {
    return reinterpret_cast<const ValidationReport*>(
               &_ValidationReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ValidationReport& a, ValidationReport& b) {
    a.Swap(&b);
  }
  inline void Swap(ValidationReport* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidationReport* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ValidationReport* New() const final {
    return CreateMaybeMessage<ValidationReport>(nullptr);
  }

  ValidationReport* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ValidationReport>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ValidationReport& from);
  void MergeFrom(const ValidationReport& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ValidationReport* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "WISE.Comms.ValidationProto.ValidationReport";
  }
  protected:
  explicit ValidationReport(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_validation_5freport_2eproto);
    return ::descriptor_table_validation_5freport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ValidationReport_ValidationNode ValidationNode;

  // accessors -------------------------------------------------------

  enum : int {
    kLoadWarningsFieldNumber = 3,
    kValidationTreeFieldNumber = 4,
    kSuccessFieldNumber = 1,
    kValidFieldNumber = 2,
  };
  // .google.protobuf.StringValue load_warnings = 3;
  bool has_load_warnings() const;
  private:
  bool _internal_has_load_warnings() const;
  public:
  void clear_load_warnings();
  const PROTOBUF_NAMESPACE_ID::StringValue& load_warnings() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_load_warnings();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_load_warnings();
  void set_allocated_load_warnings(PROTOBUF_NAMESPACE_ID::StringValue* load_warnings);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_load_warnings() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_load_warnings();
  public:
  void unsafe_arena_set_allocated_load_warnings(
      PROTOBUF_NAMESPACE_ID::StringValue* load_warnings);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_load_warnings();

  // .WISE.Comms.ValidationProto.ValidationReport.ValidationNode validation_tree = 4;
  bool has_validation_tree() const;
  private:
  bool _internal_has_validation_tree() const;
  public:
  void clear_validation_tree();
  const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode& validation_tree() const;
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* release_validation_tree();
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* mutable_validation_tree();
  void set_allocated_validation_tree(::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* validation_tree);
  private:
  const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode& _internal_validation_tree() const;
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* _internal_mutable_validation_tree();
  public:
  void unsafe_arena_set_allocated_validation_tree(
      ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* validation_tree);
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* unsafe_arena_release_validation_tree();

  // bool success = 1;
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // bool valid = 2;
  void clear_valid();
  bool valid() const;
  void set_valid(bool value);
  private:
  bool _internal_valid() const;
  void _internal_set_valid(bool value);
  public:

  // @@protoc_insertion_point(class_scope:WISE.Comms.ValidationProto.ValidationReport)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::StringValue* load_warnings_;
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* validation_tree_;
  bool success_;
  bool valid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_validation_5freport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ValidationReport_ValidationNode_ErrorObject

// string name = 1;
inline void ValidationReport_ValidationNode_ErrorObject::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ValidationReport_ValidationNode_ErrorObject::name() const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.name)
  return _internal_name();
}
inline void ValidationReport_ValidationNode_ErrorObject::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.name)
}
inline std::string* ValidationReport_ValidationNode_ErrorObject::mutable_name() {
  // @@protoc_insertion_point(field_mutable:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.name)
  return _internal_mutable_name();
}
inline const std::string& ValidationReport_ValidationNode_ErrorObject::_internal_name() const {
  return name_.Get();
}
inline void ValidationReport_ValidationNode_ErrorObject::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ValidationReport_ValidationNode_ErrorObject::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.name)
}
inline void ValidationReport_ValidationNode_ErrorObject::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.name)
}
inline void ValidationReport_ValidationNode_ErrorObject::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.name)
}
inline std::string* ValidationReport_ValidationNode_ErrorObject::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ValidationReport_ValidationNode_ErrorObject::release_name() {
  // @@protoc_insertion_point(field_release:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ValidationReport_ValidationNode_ErrorObject::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.name)
}

// .google.protobuf.StringValue value = 2;
inline bool ValidationReport_ValidationNode_ErrorObject::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool ValidationReport_ValidationNode_ErrorObject::has_value() const {
  return _internal_has_value();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& ValidationReport_ValidationNode_ErrorObject::_internal_value() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& ValidationReport_ValidationNode_ErrorObject::value() const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.value)
  return _internal_value();
}
inline void ValidationReport_ValidationNode_ErrorObject::unsafe_arena_set_allocated_value(
    PROTOBUF_NAMESPACE_ID::StringValue* value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.value)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode_ErrorObject::release_value() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = value_;
  value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode_ErrorObject::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_release:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.value)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = value_;
  value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode_ErrorObject::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    value_ = p;
  }
  return value_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode_ErrorObject::mutable_value() {
  // @@protoc_insertion_point(field_mutable:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.value)
  return _internal_mutable_value();
}
inline void ValidationReport_ValidationNode_ErrorObject::set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject.value)
}

// -------------------------------------------------------------------

// ValidationReport_ValidationNode

// .WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorLevel error_level = 1;
inline void ValidationReport_ValidationNode::clear_error_level() {
  error_level_ = 0;
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel ValidationReport_ValidationNode::_internal_error_level() const {
  return static_cast< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel >(error_level_);
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel ValidationReport_ValidationNode::error_level() const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_level)
  return _internal_error_level();
}
inline void ValidationReport_ValidationNode::_internal_set_error_level(::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel value) {
  
  error_level_ = value;
}
inline void ValidationReport_ValidationNode::set_error_level(::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel value) {
  _internal_set_error_level(value);
  // @@protoc_insertion_point(field_set:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_level)
}

// string protobuf_name = 2;
inline void ValidationReport_ValidationNode::clear_protobuf_name() {
  protobuf_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ValidationReport_ValidationNode::protobuf_name() const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.protobuf_name)
  return _internal_protobuf_name();
}
inline void ValidationReport_ValidationNode::set_protobuf_name(const std::string& value) {
  _internal_set_protobuf_name(value);
  // @@protoc_insertion_point(field_set:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.protobuf_name)
}
inline std::string* ValidationReport_ValidationNode::mutable_protobuf_name() {
  // @@protoc_insertion_point(field_mutable:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.protobuf_name)
  return _internal_mutable_protobuf_name();
}
inline const std::string& ValidationReport_ValidationNode::_internal_protobuf_name() const {
  return protobuf_name_.Get();
}
inline void ValidationReport_ValidationNode::_internal_set_protobuf_name(const std::string& value) {
  
  protobuf_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ValidationReport_ValidationNode::set_protobuf_name(std::string&& value) {
  
  protobuf_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.protobuf_name)
}
inline void ValidationReport_ValidationNode::set_protobuf_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  protobuf_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.protobuf_name)
}
inline void ValidationReport_ValidationNode::set_protobuf_name(const char* value,
    size_t size) {
  
  protobuf_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.protobuf_name)
}
inline std::string* ValidationReport_ValidationNode::_internal_mutable_protobuf_name() {
  
  return protobuf_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ValidationReport_ValidationNode::release_protobuf_name() {
  // @@protoc_insertion_point(field_release:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.protobuf_name)
  return protobuf_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ValidationReport_ValidationNode::set_allocated_protobuf_name(std::string* protobuf_name) {
  if (protobuf_name != nullptr) {
    
  } else {
    
  }
  protobuf_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), protobuf_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.protobuf_name)
}

// repeated .WISE.Comms.ValidationProto.ValidationReport.ValidationNode.ErrorObject error_values = 3;
inline int ValidationReport_ValidationNode::_internal_error_values_size() const {
  return error_values_.size();
}
inline int ValidationReport_ValidationNode::error_values_size() const {
  return _internal_error_values_size();
}
inline void ValidationReport_ValidationNode::clear_error_values() {
  error_values_.Clear();
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject* ValidationReport_ValidationNode::mutable_error_values(int index) {
  // @@protoc_insertion_point(field_mutable:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_values)
  return error_values_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject >*
ValidationReport_ValidationNode::mutable_error_values() {
  // @@protoc_insertion_point(field_mutable_list:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_values)
  return &error_values_;
}
inline const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject& ValidationReport_ValidationNode::_internal_error_values(int index) const {
  return error_values_.Get(index);
}
inline const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject& ValidationReport_ValidationNode::error_values(int index) const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_values)
  return _internal_error_values(index);
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject* ValidationReport_ValidationNode::_internal_add_error_values() {
  return error_values_.Add();
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject* ValidationReport_ValidationNode::add_error_values() {
  // @@protoc_insertion_point(field_add:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_values)
  return _internal_add_error_values();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorObject >&
ValidationReport_ValidationNode::error_values() const {
  // @@protoc_insertion_point(field_list:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_values)
  return error_values_;
}

// .google.protobuf.StringValue error_id = 4;
inline bool ValidationReport_ValidationNode::_internal_has_error_id() const {
  return this != internal_default_instance() && error_id_ != nullptr;
}
inline bool ValidationReport_ValidationNode::has_error_id() const {
  return _internal_has_error_id();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& ValidationReport_ValidationNode::_internal_error_id() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = error_id_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& ValidationReport_ValidationNode::error_id() const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_id)
  return _internal_error_id();
}
inline void ValidationReport_ValidationNode::unsafe_arena_set_allocated_error_id(
    PROTOBUF_NAMESPACE_ID::StringValue* error_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(error_id_);
  }
  error_id_ = error_id;
  if (error_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_id)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode::release_error_id() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = error_id_;
  error_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode::unsafe_arena_release_error_id() {
  // @@protoc_insertion_point(field_release:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_id)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = error_id_;
  error_id_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode::_internal_mutable_error_id() {
  
  if (error_id_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    error_id_ = p;
  }
  return error_id_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode::mutable_error_id() {
  // @@protoc_insertion_point(field_mutable:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_id)
  return _internal_mutable_error_id();
}
inline void ValidationReport_ValidationNode::set_allocated_error_id(PROTOBUF_NAMESPACE_ID::StringValue* error_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(error_id_);
  }
  if (error_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(error_id)->GetArena();
    if (message_arena != submessage_arena) {
      error_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error_id, submessage_arena);
    }
    
  } else {
    
  }
  error_id_ = error_id;
  // @@protoc_insertion_point(field_set_allocated:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.error_id)
}

// repeated .WISE.Comms.ValidationProto.ValidationReport.ValidationNode children = 5;
inline int ValidationReport_ValidationNode::_internal_children_size() const {
  return children_.size();
}
inline int ValidationReport_ValidationNode::children_size() const {
  return _internal_children_size();
}
inline void ValidationReport_ValidationNode::clear_children() {
  children_.Clear();
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* ValidationReport_ValidationNode::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.children)
  return children_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode >*
ValidationReport_ValidationNode::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.children)
  return &children_;
}
inline const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode& ValidationReport_ValidationNode::_internal_children(int index) const {
  return children_.Get(index);
}
inline const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode& ValidationReport_ValidationNode::children(int index) const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.children)
  return _internal_children(index);
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* ValidationReport_ValidationNode::_internal_add_children() {
  return children_.Add();
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* ValidationReport_ValidationNode::add_children() {
  // @@protoc_insertion_point(field_add:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.children)
  return _internal_add_children();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode >&
ValidationReport_ValidationNode::children() const {
  // @@protoc_insertion_point(field_list:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.children)
  return children_;
}

// .google.protobuf.StringValue details = 6;
inline bool ValidationReport_ValidationNode::_internal_has_details() const {
  return this != internal_default_instance() && details_ != nullptr;
}
inline bool ValidationReport_ValidationNode::has_details() const {
  return _internal_has_details();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& ValidationReport_ValidationNode::_internal_details() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = details_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& ValidationReport_ValidationNode::details() const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.details)
  return _internal_details();
}
inline void ValidationReport_ValidationNode::unsafe_arena_set_allocated_details(
    PROTOBUF_NAMESPACE_ID::StringValue* details) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(details_);
  }
  details_ = details;
  if (details) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.details)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode::release_details() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = details_;
  details_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode::unsafe_arena_release_details() {
  // @@protoc_insertion_point(field_release:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.details)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = details_;
  details_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode::_internal_mutable_details() {
  
  if (details_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    details_ = p;
  }
  return details_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport_ValidationNode::mutable_details() {
  // @@protoc_insertion_point(field_mutable:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.details)
  return _internal_mutable_details();
}
inline void ValidationReport_ValidationNode::set_allocated_details(PROTOBUF_NAMESPACE_ID::StringValue* details) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(details_);
  }
  if (details) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(details)->GetArena();
    if (message_arena != submessage_arena) {
      details = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, details, submessage_arena);
    }
    
  } else {
    
  }
  details_ = details;
  // @@protoc_insertion_point(field_set_allocated:WISE.Comms.ValidationProto.ValidationReport.ValidationNode.details)
}

// -------------------------------------------------------------------

// ValidationReport

// bool success = 1;
inline void ValidationReport::clear_success() {
  success_ = false;
}
inline bool ValidationReport::_internal_success() const {
  return success_;
}
inline bool ValidationReport::success() const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.success)
  return _internal_success();
}
inline void ValidationReport::_internal_set_success(bool value) {
  
  success_ = value;
}
inline void ValidationReport::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:WISE.Comms.ValidationProto.ValidationReport.success)
}

// bool valid = 2;
inline void ValidationReport::clear_valid() {
  valid_ = false;
}
inline bool ValidationReport::_internal_valid() const {
  return valid_;
}
inline bool ValidationReport::valid() const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.valid)
  return _internal_valid();
}
inline void ValidationReport::_internal_set_valid(bool value) {
  
  valid_ = value;
}
inline void ValidationReport::set_valid(bool value) {
  _internal_set_valid(value);
  // @@protoc_insertion_point(field_set:WISE.Comms.ValidationProto.ValidationReport.valid)
}

// .google.protobuf.StringValue load_warnings = 3;
inline bool ValidationReport::_internal_has_load_warnings() const {
  return this != internal_default_instance() && load_warnings_ != nullptr;
}
inline bool ValidationReport::has_load_warnings() const {
  return _internal_has_load_warnings();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& ValidationReport::_internal_load_warnings() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = load_warnings_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& ValidationReport::load_warnings() const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.load_warnings)
  return _internal_load_warnings();
}
inline void ValidationReport::unsafe_arena_set_allocated_load_warnings(
    PROTOBUF_NAMESPACE_ID::StringValue* load_warnings) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(load_warnings_);
  }
  load_warnings_ = load_warnings;
  if (load_warnings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:WISE.Comms.ValidationProto.ValidationReport.load_warnings)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport::release_load_warnings() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = load_warnings_;
  load_warnings_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport::unsafe_arena_release_load_warnings() {
  // @@protoc_insertion_point(field_release:WISE.Comms.ValidationProto.ValidationReport.load_warnings)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = load_warnings_;
  load_warnings_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport::_internal_mutable_load_warnings() {
  
  if (load_warnings_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    load_warnings_ = p;
  }
  return load_warnings_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* ValidationReport::mutable_load_warnings() {
  // @@protoc_insertion_point(field_mutable:WISE.Comms.ValidationProto.ValidationReport.load_warnings)
  return _internal_mutable_load_warnings();
}
inline void ValidationReport::set_allocated_load_warnings(PROTOBUF_NAMESPACE_ID::StringValue* load_warnings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(load_warnings_);
  }
  if (load_warnings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(load_warnings)->GetArena();
    if (message_arena != submessage_arena) {
      load_warnings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, load_warnings, submessage_arena);
    }
    
  } else {
    
  }
  load_warnings_ = load_warnings;
  // @@protoc_insertion_point(field_set_allocated:WISE.Comms.ValidationProto.ValidationReport.load_warnings)
}

// .WISE.Comms.ValidationProto.ValidationReport.ValidationNode validation_tree = 4;
inline bool ValidationReport::_internal_has_validation_tree() const {
  return this != internal_default_instance() && validation_tree_ != nullptr;
}
inline bool ValidationReport::has_validation_tree() const {
  return _internal_has_validation_tree();
}
inline void ValidationReport::clear_validation_tree() {
  if (GetArena() == nullptr && validation_tree_ != nullptr) {
    delete validation_tree_;
  }
  validation_tree_ = nullptr;
}
inline const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode& ValidationReport::_internal_validation_tree() const {
  const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* p = validation_tree_;
  return p != nullptr ? *p : *reinterpret_cast<const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode*>(
      &::WISE::Comms::ValidationProto::_ValidationReport_ValidationNode_default_instance_);
}
inline const ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode& ValidationReport::validation_tree() const {
  // @@protoc_insertion_point(field_get:WISE.Comms.ValidationProto.ValidationReport.validation_tree)
  return _internal_validation_tree();
}
inline void ValidationReport::unsafe_arena_set_allocated_validation_tree(
    ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* validation_tree) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(validation_tree_);
  }
  validation_tree_ = validation_tree;
  if (validation_tree) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:WISE.Comms.ValidationProto.ValidationReport.validation_tree)
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* ValidationReport::release_validation_tree() {
  
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* temp = validation_tree_;
  validation_tree_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* ValidationReport::unsafe_arena_release_validation_tree() {
  // @@protoc_insertion_point(field_release:WISE.Comms.ValidationProto.ValidationReport.validation_tree)
  
  ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* temp = validation_tree_;
  validation_tree_ = nullptr;
  return temp;
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* ValidationReport::_internal_mutable_validation_tree() {
  
  if (validation_tree_ == nullptr) {
    auto* p = CreateMaybeMessage<::WISE::Comms::ValidationProto::ValidationReport_ValidationNode>(GetArena());
    validation_tree_ = p;
  }
  return validation_tree_;
}
inline ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* ValidationReport::mutable_validation_tree() {
  // @@protoc_insertion_point(field_mutable:WISE.Comms.ValidationProto.ValidationReport.validation_tree)
  return _internal_mutable_validation_tree();
}
inline void ValidationReport::set_allocated_validation_tree(::WISE::Comms::ValidationProto::ValidationReport_ValidationNode* validation_tree) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete validation_tree_;
  }
  if (validation_tree) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(validation_tree);
    if (message_arena != submessage_arena) {
      validation_tree = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, validation_tree, submessage_arena);
    }
    
  } else {
    
  }
  validation_tree_ = validation_tree;
  // @@protoc_insertion_point(field_set_allocated:WISE.Comms.ValidationProto.ValidationReport.validation_tree)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ValidationProto
}  // namespace Comms
}  // namespace WISE

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel>() {
  return ::WISE::Comms::ValidationProto::ValidationReport_ValidationNode_ErrorLevel_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_validation_5freport_2eproto
